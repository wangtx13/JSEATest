attribute keys 1 1 2006 07 09 1996 2006 disclose accordance draw geom defines attribute keys used figures well some helper <p> have attribute keys their own author 1 2 2006 07 09 stroke dash factor <br>1 1 2006 06 07 values <br>1 0 23 3 2006 created attribute keys fill color value attribute color attribute key< color> f i l l o l o r = attribute key< color> fill color color white winding rule i n d i n g r u l e set value even odd winding rule used determining interior path e v e n o d d i n d i n g r u l e set value non zero winding rule used determining interior path n o n z e r o fill under stroke value attribute attribute key< winding rule> i n d i n g r u l e = attribute key< winding rule> winding rule winding rule e v e n o d d underfill f i l l u n d e r s t r o k e set value area under stroke filled n o n e f i l l u n d e r s t r o k e set value area under stroke filled center stroke behavior graphics2 d fill shape graphics2 d draw shape when using same shape e n t e r f i l l u n d e r s t r o k e set value area under stroke filled f u l l fill under stroke value attribute attribute key< underfill> f i l l u n d e r s t r o k e = attribute key< underfill> fill under stroke underfill e n t e r stroke color value attribute color attribute key< color> s t r o k e o l o r = attribute key< color> stroke color color black stroke width used construct basic stroke outline stroke attribute key< double> s t r o k e t h = attribute key< double> stroke width 1d factor stroke inner width value 2 attribute key< double> s t r o k e i n n e r t h f t o r = attribute key< double> inner stroke width factor 2d stroke join one basic stroke j o i n values used construct basic stroke attribute key< integer> s t r o k e j o i n = attribute key< integer> stroke join basic stroke j o i n m i t e r stroke join one basic stroke p values used construct basic stroke attribute key< integer> s t r o k e p = attribute key< integer> stroke cap basic stroke p b u t t stroke miter limit factor multiplied total stroke width used construct miter limit basic stroke attribute key< double> s t r o k e m i t e r l i m i t f t o r = attribute key< double> stroke miter limit factor 3d doubles used specify dash pattern basic stroke attribute key<double > s t r o k e d s h e s = attribute key<double > stroke dashes used specify starting phase stroke dashes attribute key< double> s t r o k e d s h p h s e = attribute key< double> stroke dash phase 0d used specify multiplication factor stroke dashes s t r o k e t h used factor attribute key< double> s t r o k e d s h f t o r = attribute key< double> stroke dash factor stroke type s t r o k e t y p e set value basic stroke instance used stroking b s i s t r o k e t y p e set value stroke instance used stroking d o u b l e stroke type value attribute either v l u e s t r o k e t y p e b s i v l u e s t r o k e t y p e d o u b l e f i x m e type should enumeration attribute key< stroke type> s t r o k e t y p e = attribute key< stroke type> stroke type stroke type b s i stroke placement s t r o k e p l e m e n t set value stroke centered on path e n t e r s t r o k e p l e m e n t set value stroke placed inside closed path i n s e s t r o k e p l e m e n t set value stroke placed outside closed path o u t s e stroke placement value either v l u e s t r o k e p l e m e n t i n s e v l u e s t r o k e p l e m e n t o u t s e v l u e s t r o k e p l e m e n t e n t e r has effect closed paths on open paths stroke always centered on path f i x m e type should enumeration attribute key< stroke placement> s t r o k e p l e m e n t = attribute key< stroke placement> stroke placement stroke placement e n t e r value attribute which used display text figure attribute key< string> t e x t = attribute key< string> text text color value attribute color attribute key< color> t e x t o l o r = attribute key< color> text color color black text shadow color value attribute color attribute key< color> t e x t s h d o o l o r = attribute key< color> text shadow color text shadow offset value attribute dimension2 d attribute key< dimension2 d double> t e x t s h d o o f f s e t = attribute key< dimension2 d double> text shadow offset dimension2 d 1d 1d value attribute font which used prototype create font text attribute key< font> f o n t f e = attribute key< font> font face font v e r d n font p l i n 10 value attribute attribute key< double> f o n t s i z e = attribute key< double> font size 12d value attribute attribute key< boolean> f o n t b o l d = attribute key< boolean> font bold value attribute attribute key< boolean> f o n t i t l i = attribute key< boolean> font italic value attribute attribute key< boolean> f o n t u n d e r l i n e d = attribute key< boolean> font underlined value attribute liner attribute key< liner> b e z i e r p t h l y o u t e r = attribute key< liner> bezier path layouter attribute key< line decoration> e n d d e o r t i o n = attribute key< line decoration> end decoration attribute key< line decoration> s t r t d e o r t i o n = attribute key< line decoration> start decoration value attribute insets2 d attribute key< insets2 d double> d e o r t o r i n s e t s = attribute key< insets2 d double> decorator insets insets2 d 0 0 0 0 value attribute insets2 d attribute key< insets2 d double> l y o u t i n s e t s = attribute key< insets2 d double> border insets insets2 d 0 0 0 0 orientation n o r t h n o r t h e s t e s t s o u t h e s t s o u t h s o u t h e s t e s t n o r t h e s t specifies direction triangle possible values are n o r t h s o u t h e s t e s t attribute key< orientation> o r i e n t t i o n = attribute key< orientation> orientation orientation n o r t h set attributes defined set< attribute key> supported attributes map< attribute key> supported attribute map hash set< attribute key> = hash set< attribute key> add arrays list attribute key f i l l o l o r f i l l u n d e r s t r o k e s t r o k e o l o r s t r o k e t h s t r o k e i n n e r t h f t o r s t r o k e j o i n s t r o k e p s t r o k e m i t e r l i m i t f t o r s t r o k e d s h e s s t r o k e d s h p h s e s t r o k e t y p e s t r o k e p l e m e n t t e x t t e x t o l o r t e x t s h d o o l o r t e x t s h d o o f f s e t f o n t f e f o n t s i z e f o n t b o l d f o n t i t l i f o n t u n d e r l i n e d b e z i e r p t h l y o u t e r e n d d e o r t i o n s t r t d e o r t i o n d e o r t o r i n s e t s o r i e n t t i o n i n d i n g r u l e supported attributes = unmodifiable set hash map< attribute key> am = hash map< attribute key> attribute key am put get key supported attribute map = unmodifiable map am convenience computing total stroke widht s t r o k e t h s t r o k e i n n e r t h s t r o k e t y p e attributes get stroke total width figure f s t r o k e t y p e get f b s i s t r o k e t h get f reached d o u b l e s t r o k e t h get f 1d + s t r o k e i n n e r t h f t o r get f reached stroke get stroke figure f stroke width = s t r o k e t h get f dash factor = s t r o k e d s h f t o r get f != ? s t r o k e d s h f t o r get f stroke width ddashes = s t r o k e d s h e s get f dashes = ddashes != dashes = ddashes length i=0 i < dashes length i++ dashes i = ddashes i dash factor s t r o k e t y p e get f b s i basic stroke stroke width basic stroke p b u t t s t r o k e j o i n get f math 1f s t r o k e m i t e r l i m i t f t o r get f stroke width dashes s t r o k e d s h p h s e get f dash factor reached d o u b l e stroke s t r o k e i n n e r t h f t o r get f stroke width stroke width basic stroke p b u t t s t r o k e j o i n get f math 1f s t r o k e m i t e r l i m i t f t o r get f stroke width dashes s t r o k e d s h p h s e get f value dash factor reached font get font figure f font prototype = f o n t f e get f prototype == get font style f != font p l i n prototype derive font get font style f f o n t s i z e get f value prototype derive font f o n t s i z e get f value get font style figure f style = font p l i n f o n t b o l d get f style |= font b o l d f o n t i t l i get f style |= font i t l i style distance rectangle needs grow shrink fill shape specified f i l l u n d e r s t r o k e s t r o k e p o s i t i o n attributes figure value number units need grown shrunk perpendicular stroke on outline shape get perpendicular fill growth figure f grow stroke width = attribute keys get stroke total width f stroke placement placement = s t r o k e p l e m e n t get f f i l l u n d e r s t r o k e get f f u l l placement i n s e grow = 0f o u t s e grow = stroke width e n t e r grow = stroke width 2d n o n e placement i n s e grow = stroke width o u t s e grow = 0f e n t e r grow = stroke width 2d e n t e r placement i n s e grow = stroke width 2d o u t s e grow = stroke width 2d e n t e r grow = 0d grow distance rectangle needs grow shrink draw shape specified f i l l u n d e r s t r o k e s t r o k e p o s i t i o n attributes figure value number units need grown shrunk perpendicular stroke on outline shape get perpendicular draw growth figure f grow stroke width = attribute keys get stroke total width f stroke placement placement = s t r o k e p l e m e n t get f placement i n s e grow = stroke width 2d o u t s e grow = stroke width 2d e n t e r grow = 0f grow distance rectangle needs grow shrink make hit detections on shape specified f i l l u n d e r s t r o k e s t r o k e p o s i t i o n attributes figure value number units need grown shrunk perpendicular stroke on outline shape get perpendicular hit growth figure f grow s t r o k e o l o r get f == grow = get perpendicular fill growth f stroke width = attribute keys get stroke total width f grow = get perpendicular draw growth f + stroke width 2d grow 