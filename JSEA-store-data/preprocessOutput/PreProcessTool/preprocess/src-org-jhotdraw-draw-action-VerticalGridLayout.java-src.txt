vertical grid layout 1 0 27 november 2003 1996 2006 disclose accordance draw action vertical grid layout <p> grid layout which lays out columns first author 1 0 27 november 2003 created vertical grid layout layout manager io serializable hgap vgap rows cols vertical = creates grid layout one column per component single row vertical grid layout 1 0 0 0 creates grid layout specified number rows columns components layout are given equal size <p> one both <code>rows< code> <code>cols< code> zero which means number placed row column rows rows value zero meaning number rows cols columns value zero meaning number columns vertical grid layout rows cols rows cols 0 0 vertical grid layout rows cols vertical rows cols 0 0 vertical vertical grid layout rows cols hgap vgap rows cols hgap vgap creates grid layout specified number rows columns components layout are given equal size <p> addition horizontal vertical gaps are set specified values horizontal gaps are placed at left right edges between each columns vertical gaps are placed at top bottom edges between each rows <p> one both <code>rows< code> <code>cols< code> zero which means number placed row column <p> <code> vertical grid layout< code> constructors defer one rows rows value zero meaning number rows cols columns value zero meaning number columns hgap horizontal gap vgap vertical gap illegal argument value both <code>rows< code> <code>cols< code> set zero vertical grid layout rows cols hgap vgap vertical rows == 0 cols == 0 illegal argument rows cols cannot both zero rows = rows cols = cols hgap = hgap vgap = vgap vertical = vertical gets number rows layout number rows layout since j d k1 1 get rows rows sets number rows layout specified value rows number rows layout illegal argument value both <code>rows< code> <code>cols< code> set zero since j d k1 1 set rows rows rows == 0 cols == 0 illegal argument rows cols cannot both zero rows = rows set vertical b vertical = b vertical vertical gets number columns layout number columns layout since j d k1 1 get columns cols sets number columns layout specified value setting number columns has affect on layout number rows specified constructor <tt>set rows< tt> non zero number columns displayed layout determined total number components number rows specified cols number columns layout illegal argument value both <code>rows< code> <code>cols< code> set zero since j d k1 1 set columns cols cols == 0 rows == 0 illegal argument rows cols cannot both zero cols = cols gets horizontal gap between components horizontal gap between components since j d k1 1 get hgap hgap sets horizontal gap between components specified value hgap horizontal gap between components since j d k1 1 set hgap hgap hgap = hgap gets vertical gap between components vertical gap between components since j d k1 1 get vgap vgap sets vertical gap between components specified value vgap vertical gap between components since j d k1 1 set vgap vgap vgap = vgap adds specified component specified layout component comp component add layout component component comp removes specified component layout comp component remove layout component component comp determines preferred size container argument using grid layout <p> preferred width grid layout largest preferred width components container times number columns plus horizontal padding times number columns plus one plus left right insets target container <p> preferred height grid layout largest preferred height components container times number rows plus vertical padding times number rows plus one plus top bottom insets target container parent container which layout preferred dimensions lay out subcomponents specified container dimension preferred layout size container parent parent get tree lock insets insets = parent get insets ncomponents = parent get component count nrows = rows ncols = cols nrows > 0 ncols = ncomponents + nrows 1 nrows nrows = ncomponents + ncols 1 ncols = 0 h = 0 i = 0 i < ncomponents i++ component comp = parent get component i dimension d = comp get preferred size < d width = d width h < d height h = d height dimension insets left + insets right + ncols + ncols 1 hgap insets top + insets bottom + nrows h + nrows 1 vgap determines minimum size container argument using grid layout <p> minimum width grid layout largest minimum width components container times number columns plus horizontal padding times number columns plus one plus left right insets target container <p> minimum height grid layout largest minimum height components container times number rows plus vertical padding times number rows plus one plus top bottom insets target container parent container which layout minimum dimensions needed lay out subcomponents specified container dimension minimum layout size container parent parent get tree lock insets insets = parent get insets ncomponents = parent get component count nrows = rows ncols = cols nrows > 0 ncols = ncomponents + nrows 1 nrows nrows = ncomponents + ncols 1 ncols = 0 h = 0 i = 0 i < ncomponents i++ component comp = parent get component i dimension d = comp get minimum size < d width = d width h < d height h = d height dimension insets left + insets right + ncols + ncols 1 hgap insets top + insets bottom + nrows h + nrows 1 vgap lays out specified container using layout <p> reshapes components specified target container order satisfy constraints <code> vertical grid layout< code> <p> grid layout manager determines size individual components dividing free space container equal sized portions according number rows columns layout container s free space equals container s size minus insets specified horizontal vertical gap components grid layout are given same size parent container which layout see container see container#do layout layout container container parent parent get tree lock insets insets = parent get insets ncomponents = parent get component count nrows = rows ncols = cols ltr = parent get component orientation left right ncomponents == 0 nrows > 0 ncols = ncomponents + nrows 1 nrows nrows = ncomponents + ncols 1 ncols = parent get width insets left + insets right h = parent get height insets top + insets bottom = ncols 1 hgap ncols h = h nrows 1 vgap nrows i ltr = 0 x = insets left < ncols c++ x += + hgap r = 0 y = insets top r < nrows r++ y += h + vgap vertical i = r + nrows i = r ncols + i < ncomponents parent get component i set bounds x y h = 0 x = parent get width insets right < ncols c++ x = + hgap r = 0 y = insets top r < nrows r++ y += h + vgap vertical i = r + nrows i = r ncols + i < ncomponents parent get component i set bounds x y h representation grid layout s values representation grid layout get get + hgap= + hgap + vgap= + vgap + rows= + rows + cols= + cols + 