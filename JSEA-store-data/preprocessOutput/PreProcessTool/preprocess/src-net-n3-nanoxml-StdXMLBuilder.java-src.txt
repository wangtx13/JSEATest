std xml builder nano xml $ revision 1 3 $ $ date 2002 01 04 21 03 28 $ $ r e l e s e 2 2 1 $ nano xml 2 2000 2002 purpose 1 2 3 net n3 io i o io reader stack std xml builder concrete i xml builder which creates tree i xml element xml data see net n3 xml element author $ r e l e s e 2 2 1 $ $ revision 1 3 $ std xml builder i xml builder stack contains current element parents stack stack root element parsed xml tree i xml element root prototype element creating tree i xml element prototype creates builder std xml builder xml element creates builder prototype prototype when building tree std xml builder i xml element prototype stack = root = prototype = prototype cleans up when s destroyed finalize throwable prototype = root = stack clear stack = finalize called before parser starts processing input xml data line nr line on which parsing starts start building line nr stack = stack root = called when processing instruction encountered p target xml are handled parser target p i target reader read data p i processing instruction target reader reader nothing called when xml element encountered see #end element element ns prefix prefix used identify namespace namespace has been specified parameter ns u r i u r i associated namespace namespace has been specified u r i associated ns prefix parameter xml data line nr line where element starts start element ns prefix ns u r i line nr full = ns prefix != full = ns prefix + + i xml element elt = prototype create element full ns u r i line nr stack empty root = elt i xml element top = i xml element stack peek top add child elt stack push elt called when attributes xml element have been processed see #start element see #add attribute element ns prefix prefix used identify namespace namespace has been specified parameter ns u r i u r i associated namespace namespace has been specified u r i associated ns prefix parameter element attributes processed ns prefix ns u r i nothing called when end xml elemnt encountered see #start element element ns prefix prefix used identify namespace namespace has been specified parameter ns u r i u r i associated namespace namespace has been specified u r i associated ns prefix parameter end element ns prefix ns u r i i xml element elt = i xml element stack pop elt get children count == 1 i xml element child = elt get child at index 0 child get == elt set content child get content elt remove child at index 0 called when attribute xml element encountered key key attribute ns prefix prefix used identify namespace namespace has been specified parameter ns u r i u r i associated namespace namespace has been specified u r i associated ns prefix parameter value value attribute type type attribute type known d t occurred processing add attribute key ns prefix ns u r i value type full = key ns prefix != full = ns prefix + + key i xml element top = i xml element stack peek top has attribute full xml parse top get top get line nr duplicate attribute + key ns prefix != top set attribute full ns u r i value top set attribute full value called when p d t element encountered reader supplied which read data reader read data element t need check boundaries t read full element rest data skipped also t have care about entities they are resolved parser reader reader which retrieve data xml data line nr line where element starts add p data reader reader line nr buf size = 2048 size read = 0 buffer str = buffer buf size buf = buf size size read >= buf size buf size = 2 str ensure capacity buf size size size = reader read buf i o e size < 0 str append buf 0 size size read += size i xml element elt = prototype create element line nr elt set content str ! stack empty i xml element top = i xml element stack peek top add child elt result building process called just before < i>parse< i> i xml parser see net n3 i xml parser#parse result building process get result root 