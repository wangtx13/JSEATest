image bevel border 3 0 2003 08 31 1996 2006 disclose accordance quaqua draw action border image plaf basic draws filled bevel border using image insets image consist bevel fill area <p> insets size image are used determine which parts image used draw corners edges bevel well fill area <p> example provide image size 10 10 insets size 2 2 4 4 then corners border are made up top left 2 2 top right 2 4 bottom left 2 4 bottom right 4 4 rectangle image inner area image used fill inner area author 3 0 x 2003 09 05 copied quaqua quaqua look feel <br>3 0 2003 08 31 moved gui plaf gui border renamed bevel border image bevel border avoid conflicts border bevel border constructor option fill content area <br>2 0 2003 07 19 redesigned <br>1 1 1 2003 07 12 cast when filling rectangle using texture <br>1 1 2002 05 29 refactored <br>1 0 2001 10 16 image bevel border border v e r b o s e = image used drawing buffered image image border insets insets border insets insets image insets image insets attribute set when image used fill content area too fill content area creates instance given image insets image has same insets border image bevel border image img insets border insets img border insets border insets creates instance given image insets image has different insets than border image bevel border image img insets image insets insets border insets img image insets border insets creates instance given image insets image has different insets than border image bevel border image img insets image insets insets border insets fill content area img buffered image image = buffered image img frame f = frame f pack media tracker t = media tracker f t add image img 0 t wait interrupted e image = buffered image img get width f img get height f buffered image t y p e i n t r g b graphics2 d img graphics = image create graphics img graphics draw image img 0 0 f img graphics dispose f dispose image insets = image insets border insets = border insets fill content area = fill content area border opaque always border opaque insets border component which border insets value applies insets get border insets component insets border insets clone paints bevel image specified component specified position size component which border painted gr paint graphics x x position painted border y y position painted border width width painted border height height painted border paint border component graphics gr x y width height image == cast graphics graphics2 d graphics2 d g = graphics2 d gr set some variables easy access insets image size top = image insets top left = image insets left bottom = image insets bottom right = image insets right img width = image get width img height = image get height optimisation draw image directly fits component fill content area width == img width height == img height g draw image image x y optimisation remove insets image width image height fits width == img width left = img width right = 0 height == img height top = img height bottom = 0 adjust insets component too small width < left + right left = math left width 2 math 0 left + width left right 2 right = width left height < top + bottom top = math top height 2 math 0 top + height top bottom 2 bottom = height top draw leads top > 0 left > 0 g draw image image x y x + left y + top 0 0 left top top > 0 right > 0 g fill rect x+width right y x+width y+top g draw image image x + width right y x + width y + top img width right 0 img width top bottom > 0 left > 0 g draw image image x y + height bottom x + left y + height 0 img height bottom left img height bottom > 0 right > 0 g draw image image x + width right y + height bottom x + width y + height img width right img height bottom img width img height draw edges buffered image sub img = texture paint paint north top > 0 left + right < width sub img = image get subimage left 0 img width right left top paint = texture paint sub img rectangle x+left y img width left right top g set paint paint g fill rect x+left y width left right top south bottom > 0 left + right < width sub img = image get subimage left img height bottom img width right left bottom paint = texture paint sub img rectangle x+left y + height bottom img width left right bottom g set paint paint g fill rect x+left y + height bottom width left right bottom west left > 0 top + bottom < height sub img = image get subimage 0 top left img height top bottom paint = texture paint sub img rectangle x y+top left img height top bottom g set paint paint g fill rect x y+top left height top bottom east right > 0 top + bottom < height sub img = image get subimage img width right top right img height top bottom paint = texture paint sub img rectangle x+width right y + top right img height top bottom g set paint paint g fill rect x+width right y + top right height top bottom fill center fill content area g set color color yellow left + right < width top + bottom < height sub img = image get subimage left top img width right left img height top bottom paint = texture paint sub img rectangle x + left y + top img width right left img height top bottom g set paint paint g fill rect x+left y + top width right left height top bottom 