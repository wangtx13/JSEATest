s v g utils 1 0 july 8 2006 1996 2006 disclose accordance samples svg color geom io draw geom samples svg figures xml draw attribute keys s v g utils author 1 0 july 8 2006 created s v g color i n h e r i t o l o r = color 0xffff00 color u r r e n t o l o r = color 0xffff00 map< color> s v g o l o r s linked hash map< color> map = linked hash map< color> s v g 1 2 tiny colors map put black color 0 0 0 map put green color 0 128 0 map put silver color 192 192 192 map put lime color 0 255 0 map put gray color 128 128 128 map put olive color 128 128 0 map put white color 255 255 255 map put yellow color 255 255 0 map put maroon color 128 0 0 map put navy color 0 0 128 map put red color 255 0 0 map put blue color 0 0 255 map put purple color 128 0 128 map put teal color 0 128 128 map put fuchsia color 255 0 255 map put aqua color 0 255 255 s v g 1 1 colors map put aliceblue color 240 248 255 map put antiquewhite color 250 235 215 map put aqua color 0 255 255 map put aquamarine color 127 255 212 map put azure color 240 255 255 map put beige color 245 245 220 map put bisque color 255 228 196 map put black color 0 0 0 map put blanchedalmond color 255 235 205 map put blue color 0 0 255 map put blueviolet color 138 43 226 map put brown color 165 42 42 map put burlywood color 222 184 135 map put cadetblue color 95 158 160 map put chartreuse color 127 255 0 map put chocolate color 210 105 30 map put coral color 255 127 80 map put cornflowerblue color 100 149 237 map put cornsilk color 255 248 220 map put crimson color 220 20 60 map put cyan color 0 255 255 map put darkblue color 0 0 139 map put darkcyan color 0 139 139 map put darkgoldenrod color 184 134 11 map put darkgray color 169 169 169 map put darkgreen color 0 100 0 map put darkgrey color 169 169 169 map put darkkhaki color 189 183 107 map put darkmagenta color 139 0 139 map put darkolivegreen color 85 107 47 map put darkorange color 255 140 0 map put darkorchid color 153 50 204 map put darkred color 139 0 0 map put darksalmon color 233 150 122 map put darkseagreen color 143 188 143 map put darkslateblue color 72 61 139 map put darkslategray color 47 79 79 map put darkslategrey color 47 79 79 map put darkturquoise color 0 206 209 map put darkviolet color 148 0 211 map put deeppink color 255 20 147 map put deepskyblue color 0 191 255 map put dimgray color 105 105 105 map put dimgrey color 105 105 105 map put dodgerblue color 30 144 255 map put firebrick color 178 34 34 map put floralwhite color 255 250 240 map put forestgreen color 34 139 34 map put fuchsia color 255 0 255 map put gainsboro color 220 220 220 map put ghostwhite color 248 248 255 map put gold color 255 215 0 map put goldenrod color 218 165 32 map put gray color 128 128 128 map put grey color 128 128 128 map put green color 0 128 0 map put greenyellow color 173 255 47 map put honeydew color 240 255 240 map put hotpink color 255 105 180 map put indianred color 205 92 92 map put indigo color 75 0 130 map put ivory color 255 255 240 map put khaki color 240 230 140 map put lavender color 230 230 250 map put lavenderblush color 255 240 245 map put lawngreen color 124 252 0 map put lemonchiffon color 255 250 205 map put lightblue color 173 216 230 map put lightcoral color 240 128 128 map put lightcyan color 224 255 255 map put lightgoldenrodyellow color 250 250 210 map put lightgray color 211 211 211 map put lightgreen color 144 238 144 map put lightgrey color 211 211 211 map put lightpink color 255 182 193 map put lightsalmon color 255 160 122 map put lightseagreen color 32 178 170 map put lightskyblue color 135 206 250 map put lightslategray color 119 136 153 map put lightslategrey color 119 136 153 map put lightsteelblue color 176 196 222 map put lightyellow color 255 255 224 map put lime color 0 255 0 map put limegreen color 50 205 50 map put linen color 250 240 230 map put magenta color 255 0 255 map put maroon color 128 0 0 map put mediumaquamarine color 102 205 170 map put mediumblue color 0 0 205 map put mediumorchid color 186 85 211 map put mediumpurple color 147 112 219 map put mediumseagreen color 60 179 113 map put mediumslateblue color 123 104 238 map put mediumspringgreen color 0 250 154 map put mediumturquoise color 72 209 204 map put mediumvioletred color 199 21 133 map put midnightblue color 25 25 112 map put mintcream color 245 255 250 map put mistyrose color 255 228 225 map put moccasin color 255 228 181 map put navajowhite color 255 222 173 map put navy color 0 0 128 map put oldlace color 253 245 230 map put olive color 128 128 0 map put olivedrab color 107 142 35 map put orange color 255 165 0 map put orangered color 255 69 0 map put orchid color 218 112 214 map put palegoldenrod color 238 232 170 map put palegreen color 152 251 152 map put paleturquoise color 175 238 238 map put palevioletred color 219 112 147 map put papayawhip color 255 239 213 map put peachpuff color 255 218 185 map put peru color 205 133 63 map put pink color 255 192 203 map put plum color 221 160 221 map put powderblue color 176 224 230 map put purple color 128 0 128 map put red color 255 0 0 map put rosybrown color 188 143 143 map put royalblue color 65 105 225 map put saddlebrown color 139 69 19 map put salmon color 250 128 114 map put sandybrown color 244 164 96 map put seagreen color 46 139 87 map put seashell color 255 245 238 map put sienna color 160 82 45 map put silver color 192 192 192 map put skyblue color 135 206 235 map put slateblue color 106 90 205 map put slategray color 112 128 144 map put slategrey color 112 128 144 map put snow color 255 250 250 map put springgreen color 0 255 127 map put steelblue color 70 130 180 map put tan color 210 180 140 map put teal color 0 128 128 map put thistle color 216 191 216 map put tomato color 255 99 71 map put turquoise color 64 224 208 map put violet color 238 130 238 map put wheat color 245 222 179 map put white color 255 255 255 map put whitesmoke color 245 245 245 map put yellow color 255 255 0 map put yellowgreen color 154 205 50 s v g 1 2 tiny colors map put activeborder u i manager get color active caption border map put activecaption u i manager get color active caption map put appworkspace u i manager get color window map put background u i manager get color desktop map put buttonface u i manager get color control map put buttonhighlight u i manager get color control highlight map put buttonshadow u i manager get color control shadow map put buttontext u i manager get color control text map put captiontext u i manager get color active caption text map put graytext u i manager get color text inactive text map put highlight u i manager get color text highlight map put highlighttext u i manager get color text highlight text map put inactiveborder u i manager get color inactive caption border map put inactivecaption u i manager get color inactive caption map put inactivecaptiontext u i manager get color inactive caption text map put infobackground u i manager get color info map put infotext u i manager get color info text map put menu u i manager get color menu map put menutext u i manager get color menu text map put scrollbar u i manager get color scrollbar map put threeddarkshadow u i manager get color control dk shadow map put threedface u i manager get color control map put threedhighlight u i manager get color control highlight map put threedlightshadow u i manager get color control lt highlight map put threedshadow u i manager get color control shadow map put window u i manager get color window map put windowframe u i manager get color window border map put windowtext u i manager get color window text s v g o l o r s = map prevent instance creation s v g affine transform get transform dom input attribute i o get transform get attribute attribute affine transform get transform str i o affine transform t = affine transform str != stream tokenizer tt = stream tokenizer reader str tt reset syntax tt word chars z tt word chars z tt word chars 128 + 32 255 tt whitespace chars 0 tt whitespace chars tt parse numbers tt next token != stream tokenizer t t e o f tt ttype != stream tokenizer t t o r d i o illegal transform +str type = tt sval tt next token != i o found transform +str type equals matrix m = 6 i=0 i < 6 i++ tt next token != stream tokenizer t t n u m b e r i o matrix value +i+ found transform +str+ token +tt ttype+ +tt sval tt next token == stream tokenizer t t o r d tt sval starts e mantissa = tt nval tt nval = value tt nval + tt sval tt push back m i = tt nval t concatenate affine transform m type equals translate tx ty tt next token != stream tokenizer t t n u m b e r i o x translation value found transform +str tx = tt nval tt next token == stream tokenizer t t n u m b e r ty = tt nval tt push back ty = 0 t translate tx ty type equals scale sx sy tt next token != stream tokenizer t t n u m b e r i o x scale value found transform +str sx = tt nval tt next token == stream tokenizer t t n u m b e r sy = tt nval tt push back sy = sx t scale sx sy type equals rotate angle cx cy tt next token != stream tokenizer t t n u m b e r i o angle value found transform +str angle = tt nval tt next token == stream tokenizer t t n u m b e r cx = tt nval tt next token != stream tokenizer t t n u m b e r i o y center value found transform +str cy = tt nval tt push back cx = cy = 0 t rotate angle math p i 180d cx math p i 180d cy math p i 180d type equals skew x angle tt next token != stream tokenizer t t n u m b e r i o skew angle found transform +str angle = tt nval t concatenate affine transform 1 0 math tan angle math p i 180 1 0 0 type equals skew y angle tt next token != stream tokenizer t t n u m b e r i o skew angle found transform +str angle = tt nval t concatenate affine transform 1 math tan angle math p i 180 0 1 0 0 i o unknown transform +type+ +str tt next token != i o found transform +str t get dimension dom input attribute i o get dimension value get attribute attribute 0 get dimension value dom input str i o scale factor = 1d str == || str length == 0 0d str ends % str = str substring 0 str length 1 str ends px str = str substring 0 str length 2 str ends pt str = str substring 0 str length 2 scale factor = 1 25 str ends pc str = str substring 0 str length 2 scale factor = 15 str ends mm str = str substring 0 str length 2 scale factor = 3 543307 str ends cm str = str substring 0 str length 2 scale factor = 35 43307 str ends str = str substring 0 str length 2 scale factor = 90 str ends em str = str substring 0 str length 2 list< map< string>> styles = list< map< string>> list< string> values = get inherited attribute style v values styles add get styles v value = get inherited attribute font size styles value != ! value ends em scale factor = get dimension value value parse str scale factor list< bezier path> get path dom input attribute i o path data get attribute attribute set path dom output out attribute bezier path path out add attribute attribute path data path path data bezier path path builder buf = builder path size == 0 nothing path size == 1 bezier path node current = path get 0 buf append m buf append current x 0 buf append buf append current y 0 buf append l buf append current x 0 buf append buf append current y 0 + 1 bezier path node previous bezier path node current previous = current = path get 0 buf append m buf append current x 0 buf append buf append current y 0 i=1 n = path size i < n i++ previous = current current = path get i previous mask bezier path c2 m s k == 0 current mask bezier path c1 m s k == 0 buf append l buf append current x 0 buf append buf append current y 0 buf append q buf append current x 1 buf append buf append current y 1 buf append buf append current x 0 buf append buf append current y 0 current mask bezier path c1 m s k == 0 buf append q buf append current x 2 buf append buf append current y 2 buf append buf append current x 0 buf append buf append current y 0 buf append buf append previous x 2 buf append buf append previous y 2 buf append buf append current x 1 buf append buf append current y 1 buf append buf append current x 0 buf append buf append current y 0 path closed path size > 1 previous = path get path size 1 current = path get 0 previous mask bezier path c2 m s k == 0 current mask bezier path c1 m s k == 0 buf append l buf append current x 0 buf append buf append current y 0 buf append q buf append current x 1 buf append buf append current y 1 buf append buf append current x 0 buf append buf append current y 0 current mask bezier path c1 m s k == 0 buf append q buf append previous x 2 buf append buf append previous y 2 buf append buf append current x 0 buf append buf append current y 0 buf append buf append previous x 2 buf append buf append previous y 2 buf append buf append current x 1 buf append buf append current y 1 buf append buf append current x 0 buf append buf append current y 0 buf append z buf hash set path commands = hash set arrays list m m z z l l h h v v s s q q t t list< bezier path> path data str i o linked list< bezier path> paths = linked list< bezier path> bezier path path = point2 d p = point2 d point2 d c1 = point2 d point2 d c2 = point2 d stream tokenizer tt = stream tokenizer reader str tt reset syntax tt parse numbers tt whitespace chars 0 tt whitespace chars next command = m command = m tt next token != stream tokenizer t t e o f tt ttype > 0 command = tt ttype command = next command tt push back bezier path node node command moveto m path != paths add path path = bezier path tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path move p x p y next command = l m path != paths add path path = bezier path tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path move p x p y next command = l close path z z p x = path get 0 x 0 p y = path get 0 y 0 path set closed lineto l tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path line p x p y next command = l l tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path line p x p y next command = l h tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval path line p x p y next command = h h tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval path line p x p y next command = h v tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path line p x p y next command = v v tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path line p x p y next command = v curveto tt next token != stream tokenizer t t n u m b e r i o number expected c1 x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c1 y = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 y = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path curve c1 x c1 y c2 x c2 y p x p y next command = tt next token != stream tokenizer t t n u m b e r i o number expected c1 x = p x + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c1 y = p y + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 x = p x + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 y = p y + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path curve c1 x c1 y c2 x c2 y p x p y next command = s node = path get path size 1 c1 x = node x 0 2d node x 1 c1 y = node y 0 2d node y 1 tt next token != stream tokenizer t t n u m b e r i o number expected c2 x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 y = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path curve c1 x c1 y c2 x c2 y p x p y next command = s s node = path get path size 1 c1 x = node x 0 2d node x 1 c1 y = node y 0 2d node y 1 tt next token != stream tokenizer t t n u m b e r i o number expected c2 x = p x + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c2 y = p y + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path curve c1 x c1 y c2 x c2 y p x p y next command = s quadto q tt next token != stream tokenizer t t n u m b e r i o number expected c1 x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c1 y = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path quad c1 x c1 y p x p y next command = q q tt next token != stream tokenizer t t n u m b e r i o number expected c1 x = p x + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected c1 y = p y + tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path quad c1 x c1 y p x p y next command = q t node = path get path size 1 c1 x = node x 0 2d node x 1 c1 y = node y 0 2d node y 1 tt next token != stream tokenizer t t n u m b e r i o number expected p x = tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y = tt nval path quad c1 x c1 y p x p y next command = t t node = path get path size 1 c1 x = node x 0 2d node x 1 c1 y = node y 0 2d node y 1 tt next token != stream tokenizer t t n u m b e r i o number expected p x += tt nval tt next token != stream tokenizer t t n u m b e r i o number expected p y += tt nval path quad c1 x c1 y p x p y next command = s i o illegal command +command path != paths add path paths get inherited attribute dom input list< map< string>> styles list< string> values = get inherited attribute i=values size 1 i >= 0 i values get i != values get i styles get i != styles get i contains key styles get i get reads attributes specified dom input assigns them figure read attributes figure f dom input i o f i x m e working when style individual attributes are both used s v g document list< map< string>> styles = list< map< string>> list< string> values = get inherited attribute style v values styles add get styles v value fill color value = get inherited attribute fill styles value != color color = get color value color != i n h e r i t o l o r color != u r r e n t o l o r f i l l o l o r set f color value = get inherited attribute fill rule styles value != i n d i n g r u l e set f value upper equals n o n z e r o ? winding rule n o n z e r o winding rule e v e n o d d i n d i n g r u l e set f winding rule n o n z e r o stroke color value = get inherited attribute stroke styles value != color color = get color value color != i n h e r i t o l o r color != u r r e n t o l o r s t r o k e o l o r set f color value = get inherited attribute stroke width styles value != s t r o k e t h set f value value value = get inherited attribute stroke miterlimit styles value != s t r o k e m i t e r l i m i t f t o r set f value value value = get inherited attribute stroke dasharray styles value != tokenizer tt = tokenizer value dashes = tt count tokens i=0 n = dashes length i < n i++ dashes i = value tt next token s t r o k e d s h e s set f dashes value = get inherited attribute stroke dashoffset styles value != s t r o k e d s h p h s e set f math abs value value value = get inherited attribute font size styles value != f o n t s i z e set f get dimension value value value = get inherited attribute text anchor styles value != s v g text t e x t n h o r set f value s v g text text anchor value upper map< string> get styles str i o hash map< string> styles = hash map< string> str == styles stream tokenizer tt = stream tokenizer reader str tt reset syntax tt word chars ! 9 tt word chars < ~ tt word chars 128 + 32 255 tt whitespace chars 0 tt next token != stream tokenizer t t e o f tt ttype != key value tt ttype != stream tokenizer t t o r d i o key token expected +str+ + hex tt ttype key = tt sval tt next token != i o colon expected after +key+ +str tt next token != stream tokenizer t t o r d i o value token expected after +key+ +str+ +tt ttype value = tt sval tt next token == stream tokenizer t t o r d value += + tt sval tt push back styles put key value styles color get color value value = value trim lower value equals none value equals current color indicates painting done using color specified color property u r r e n t o l o r value equals inherit each property also have specified value inherit which means given element property takes same computed value property element s parent i n h e r i t o l o r s v g o l o r s contains key value s v g o l o r s get value value starts value length == 7 color decode value value starts value length == 4 three digits hex value th = decode value color th 0xf | th 0xf << 4 | th 0xf0 << 4 | th 0xf0 << 8 | th 0xf00 << 8 | th 0xf00 << 12 value starts rgb tokenizer tt = tokenizer value tt next token color = color decode tt next token decode tt next token decode tt next token set defaults figure f set s v g values f i l l o l o r set f color black s t r o k e o l o r set f s t r o k e d s h f t o r set f 1d writes attributes figure specified dom output write attributes figure f dom output out i o color color dbl value fill attributes color = f i l l o l o r get f color == value = none value = 000000 + hex color get r g b value = +value substring value length 6 out add attribute fill value i n d i n g r u l e get f != winding rule n o n z e r o out add attribute fill rule evenodd stroke attributes color = s t r o k e o l o r get f color == value = none value = 000000 + hex color get r g b value = +value substring value length 6 out add attribute stroke value out add attribute stroke width s t r o k e t h get f 1d out add attribute stroke miterlimit s t r o k e m i t e r l i m i t f t o r get f s t r o k e t h get f 4d dashes = s t r o k e d s h e s get f dbl = s t r o k e d s h f t o r get f == ? s t r o k e t h get f s t r o k e d s h f t o r get f dashes != builder buf = builder i=0 i < dashes length i++ i != 0 buf append buf append dashes i dbl out add attribute stroke dasharray buf out add attribute stroke dashoffset s t r o k e d s h p h s e get f 0d text attributes out add attribute font size f o n t s i z e get f out add attribute text anchor start 