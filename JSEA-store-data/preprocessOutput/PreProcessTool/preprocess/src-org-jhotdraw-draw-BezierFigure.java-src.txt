bezier figure 2 1 1 2006 06 08 1996 2006 disclose accordance draw geom undo io draw attribute keys geom xml dom input xml dom output bezier figure used draw arbitrary shapes using bezier path used draw open path closed shape 2 1 1 2006 06 08 fixed caps drawing <br>2 1 2006 04 21 improved caps drawing <br>2 0 2006 01 14 support coordinates <br>1 0 march 14 2004 author bezier figure attributed figure attribute key< boolean> l o s e d = attribute key< boolean> closed bezier path bezier path path capped path bezier path derived variable path we cache increase drawing speed figure bezier path capped path creates instance bezier figure creates instance bezier figure closed path = bezier path l o s e d set closed path set closed closed d r i n g s h p e n d b o u n d s t t r i b u t e s e d i t i n g o n n e t i n g figures connector specified location chop diamond connector see chop diamond connector connector find connector point2 d p connection figure prototype chop bezier connector connector find compatible connector connector start chop bezier connector o m p o s i t e f i g u r e s l o n i n g e v e n t h n d l i n g draw stroke graphics2 d g closed grow = attribute keys get perpendicular draw growth grow == 0d g draw path grow stroke gs = grow stroke grow attribute keys get stroke total width s t r o k e m i t e r l i m i t f t o r get g draw gs create stroked shape path g draw get capped path draw caps g draw caps graphics2 d g get point count > 1 s t r t d e o r t i o n get != bezier path cp = get capped path point2 d p1 = path get 0 0 point2 d p2 = cp get 0 0 p2 equals p1 p2 = path get 1 0 s t r t d e o r t i o n get draw g p1 p2 e n d d e o r t i o n get != bezier path cp = get capped path point2 d p1 = path get path size 1 0 point2 d p2 = cp get path size 1 0 p2 equals p1 p2 = path get path size 2 0 e n d d e o r t i o n get draw g p1 p2 draw fill graphics2 d g closed grow = attribute keys get perpendicular fill growth grow == 0d g fill path grow stroke gs = grow stroke grow attribute keys get stroke total width s t r o k e m i t e r l i m i t f t o r get g fill gs create stroked shape path contains point2 d p closed grow = attribute keys get perpendicular hit growth grow == 0d path contains p grow stroke gs = grow stroke grow attribute keys get stroke total width s t r o k e m i t e r l i m i t f t o r get gs create stroked shape path contains p tolerance = math 2f attribute keys get stroke total width 2 get capped path outline contains p tolerance s t r t d e o r t i o n get != bezier path cp = get capped path point2 d p1 = path get 0 0 point2 d p2 = cp get 0 0 f i x m e check here caps path contains point geom line contains point p1 x p1 y p2 x p2 y p x p y tolerance e n d d e o r t i o n get != bezier path cp = get capped path point2 d p1 = path get path size 1 0 point2 d p2 = cp get path size 1 0 f i x m e check here caps path contains point geom line contains point p1 x p1 y p2 x p2 y p x p y tolerance checks figure connected filled bezier figures connected connect closed collection< handle> create handles detail level linked list< handle> handles = linked list< handle> detail level 0 box handle kit add box handles handles handles add bezier scale handle 1 i=0 n = path size i < n i++ handles add bezier node handle i handles rectangle2 d get bounds rectangle2 d bounds =path get bounds2 d make sure bounds are empty bounds width = math 1 bounds width bounds height = math 1 bounds height bounds rectangle2 d get figure draw bounds rectangle2 d r = get figure draw bounds get node count > 1 s t r t d e o r t i o n get != point2 d p1 = get point 0 0 point2 d p2 = get point 1 0 r add s t r t d e o r t i o n get get draw bounds p1 p2 e n d d e o r t i o n get != point2 d p1 = get point get node count 1 0 point2 d p2 = get point get node count 2 0 r add e n d d e o r t i o n get get draw bounds p1 p2 r validate validate path invalidate path invalidate capped path clone bezier path figure bezier path get bezier path bezier path path clone point2 d get point on path relative flatness path get point on path relative flatness sets bezier path cloning firing events basic set bezier path bezier path value path = value set closed value closed closed get attribute l o s e d set closed value l o s e d set value basic set attribute attribute key key value key == l o s e d path set closed value basic set attribute key value basic set bounds point2 d anchor point2 d basic set start point anchor basic set end point invalidate basic transform affine transform tx path transform tx invalidate invalidate invalidate path invalidate path invalidate capped path invalidate capped path capped path = path which capped path at ends prevent drawing under end caps bezier path get capped path capped path == capped path = bezier path path clone closed capped path set closed capped path size > 1 s t r t d e o r t i o n get != bezier path node p0 = capped path get 0 bezier path node p1 = capped path get 1 point2 d pp p0 get mask bezier path c2 m s k != 0 pp = p0 get control point 2 p1 get mask bezier path c1 m s k != 0 pp = p1 get control point 1 pp = p1 get control point 0 radius = s t r t d e o r t i o n get get decoration radius line length = geom length p0 get control point 0 pp capped path set 0 0 geom cap pp p0 get control point 0 math radius line length e n d d e o r t i o n get != bezier path node p0 = capped path get capped path size 1 bezier path node p1 = capped path get capped path size 2 point2 d pp p0 get mask bezier path c1 m s k != 0 pp = p0 get control point 1 p1 get mask bezier path c2 m s k != 0 pp = p1 get control point 2 pp = p1 get control point 0 radius = e n d d e o r t i o n get get decoration radius line length = geom length p0 get control point 0 pp capped path set capped path size 1 0 geom cap pp p0 get control point 0 math radius line length capped path invalidate path capped path layout adds control point add node bezier path node p add node get node count p adds node list points add node index bezier path node p bezier path node point = bezier path node p change basic add node index point layout fire undoable edit happened undoable edit get presentation punkt einf\u00fcgen undo cannot undo undo change basic remove node index redo cannot undo redo change basic add node index point adds control point basic add node bezier path node p path add p invalidate adds control point basic add node index bezier path node p path add index p sets control point set node index bezier path node p change bezier path node old value = path get index bezier path node value = bezier path node p basic set node index value fire undoable edit happened bezier node edit index old value value sets control point basic set node index bezier path node p path set index p gets control point bezier path node get node index bezier path node path get index clone convenience getting point coordinate first control point specified node point2 d get point index path get index get control point 0 gets point coordinate control point point2 d get point index coord path get index get control point coord sets point coordinate control point set point index coord point2 d p change basic set point index coord p x x x fire undoable edit sets point coordinate control point 0 at specified node basic set point index point2 d p bezier path node node = path get index dx = p x node x 0 dy = p y node y 0 i=0 i < node x length i++ node x i += dx node y i += dy invalidate sets point coordinate control point basic set point index coord point2 d p bezier path node cp = bezier path node path get index cp set control point coord p basic set node index cp convenience setting point coordinate start point basic set start point point2 d p basic set point 0 p convenience setting point coordinate end point basic set end point point2 d p basic set point get point count 1 p convenience getting start point point2 d get start point get point 0 0 convenience getting end point point2 d get end point get point get node count 1 0 finds control point index 1 control point could found f i x m e move bezier path find node point2 d p bezier path tp = path i=0 i < tp size i++ bezier path node p2 = tp get i p2 x 0 == p x p2 y 0 == p y i 1 removes points remove nodes change basic remove nodes removes point2 d at specified index remove node index bezier path node old point = bezier path node path get index change basic remove node index layout fire undoable edit happened undoable edit get presentation punkt entfernen undo cannot undo undo change basic add node index old point redo cannot undo redo basic remove node index gets segment polyline hit given point2 d index segment 1 segment was hit x x x move bezier path find segment point2 d find fixme path iterator point2 d p1 p2 i = 0 n = get node count 1 i < n i++ p1 = path get i 0 p2 = path get i+1 0 geom line contains point p1 x p1 y p2 x p2 y find x find y 3d i 1 joins two segments one given point2 d hits node polyline two segments were joined x x x move bezier path basic join segments point2 d join i = find segment join i != 1 i > 1 remove node i splits segment at given point2 d segment was hit index segment 1 segment was hit x x x move bezier path basic split segment point2 d split i = find segment split i != 1 add node i + 1 bezier path node split i+1 removes point2 d at specified index basic remove node index path remove index removes point2 d at specified index basic remove nodes path clear gets node count get node count path size gets point count get point count path size bezier figure clone bezier figure = bezier figure clone path = bezier path path clone invalidate restore geometry path set bezier path geometry get restore data path clone point2 d chop point2 d p closed grow = attribute keys get perpendicular hit growth grow == 0d path chop p grow stroke gs = grow stroke grow attribute keys get stroke total width s t r o k e m i t e r l i m i t f t o r get geom chop gs create stroked shape path p path chop p point2 d get center path get center point2 d get outermost point path get path index outermost node get control point 0 joins two segments one given point2 d hits node polyline two segments were joined basic join segments point2 d join tolerance path join segments join tolerance splits segment at given point2 d segment was hit index segment 1 segment was hit basic split segment point2 d split tolerance path split segment split tolerance handles mouse click handle mouse click point2 d p mouse evt drawing view view evt get click count == 2 view get handle detail level == 1 change index = basic split segment p 5f view get scale factor index != 1 bezier path node node = get node index fire undoable edit happened undoable edit redo cannot redo redo change basic add node index node undo cannot undo undo change basic remove node index write dom output out i o write points out write attributes out write points dom output out i o out open element points closed out add attribute closed i=0 n = get node count i < n i++ bezier path node node = get node i out open element p node mask != 0 out add attribute mask node mask ! node keep colinear out add attribute colinear out add attribute x node x 0 out add attribute y node y 0 node x 1 != node x 0 || node y 1 != node y 0 out add attribute c1x node x 1 out add attribute c1y node y 1 node x 2 != node x 0 || node y 2 != node y 0 out add attribute c2x node x 2 out add attribute c2y node y 2 out close element out close element override read dom input i o read points read attributes read points dom input i o path clear open element points set closed get attribute closed i=0 n = get element count p i < n i++ open element p i bezier path node node = bezier path node get attribute mask 0 get attribute x 0d get attribute y 0d get attribute c1x get attribute x 0d get attribute c1y get attribute y 0d get attribute c2x get attribute x 0d get attribute c2y get attribute y 0d node keep colinear = get attribute colinear path add node path invalidate path close element close element 