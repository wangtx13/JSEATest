content reader nano xml $ revision 1 4 $ $ date 2002 01 04 21 03 28 $ $ r e l e s e 2 2 1 $ nano xml 2 2000 2002 purpose 1 2 3 net n3 io reader io i o reader reads data another reader until element has been encountered author $ r e l e s e 2 2 1 $ $ revision 1 4 $ content reader reader encapsulated reader i xml reader reader buffer buffer pointer buffer buffer index entity resolver i xml entity resolver resolver creates reader reader encapsulated reader resolver entity resolver buffer data has already been read <code>reader< code> content reader i xml reader reader i xml entity resolver resolver buffer reader = reader resolver = resolver buffer = buffer buffer index = 0 cleans up when s destroyed finalize throwable reader = resolver = buffer = finalize reads block data output buffer where put read data offset first position buffer put data size maximum number chars read number chars read 1 at e o f io i o occurred reading data read output buffer offset size i o chars read = 0 buffer length = buffer length offset + size > output buffer length size = output buffer length offset chars read < size str = ch buffer index >= buffer length str = xml read reader ch = str at 0 ch = buffer at buffer index buffer index++ output buffer chars read = ch chars read++ t interprete chars buffer ch == < reader unread ch ch == str length > 1 str at 1 == ch = xml process literal str xml process entity str reader resolver output buffer chars read = ch chars read++ chars read == 0 chars read = 1 chars read xml parse e i o e get message skips remaining data closes stream io i o occurred reading data close i o buffer length = buffer length str = ch buffer index >= buffer length str = xml read reader ch = str at 0 ch = buffer at buffer index buffer index++ t interprete chars buffer ch == < reader unread ch ch == str length > 1 str at 1 != xml process entity str reader resolver xml parse e i o e get message 