generic listener 1 1 2003 11 03 1996 2006 disclose accordance draw action reflect generic listener creates anonymous listener classes at runtime <p> usage <pre> demo j panel root = j panel border layout j label label = j label my button action action e label set text button action my mouse mouse e label set text mouse +e demo j button button = j button button dynamic listener listener generated at run time i e at run time action listener generated then loaded one these actually created even many calls generic listener create action listener are made action listener action listener = action listener generic listener create action listener action performed my button action button add action listener action listener here s another dynamically generated listener one little different because listener argument actually specifies one many listener previous example action performed named one action listener mouse listener mouse listener = mouse listener generic listener create mouse listener mouse my mouse button add mouse listener mouse listener < pre> author 1 1 2003 11 03 support parameterless target <br>1 0 2003 11 02 created generic listener convenient <code>create listener target target < code> looks up listener target so t have create listener listener target target listener = get listener listener listener search target same parameter types listener target = get target target target listener get parameter types nothing found? search target target == target = get target target target 0 still nothing found? we give up target == runtime +target name+ +target get create listener target target instance contains declaration <code>listener method< code> <code>listener method< code> apply <code>target target method< code> incoming create listener target target create uses dynamic proxy p i introduced j d k 1 3 create instance invoker override handle invoking target on target invocation handler handler = invoker proxy throwable send except target superclass handling listener equals target get parameter types length == 0 special treatment parameterless target target target 0 regular treatment target having same argument list listener target target proxy cls = listener get declaring loader cl = cls get loader proxy proxy instance cl cls handler invocation handler which handles basic invoker invocation handler proxy throwable get declaring == = get equals hash proxy hash proxy equals equals proxy equals proxy 0 equals proxy proxy although listener are supposed we allow type here produce 0 appropriate value get type proxy hash proxy identity hash proxy proxy equals proxy other proxy == other ? t r u e f l s e proxy proxy proxy get get + + hex proxy hash character 0 = character 0 0 = 0 value rt !rt primitive rt == rt == f l s e rt == 0 convert other kind number 0 helper e z create get listener listener listener given arguments create find out which listener desired m = listener get result = i = 0 i < m length i++ listener equals m i get result != runtime ambiguous +m i + vs +result result = m i result == runtime +listener name+ +listener result get target target target parameter types m = target get get result = each i = 0 i < m length i++ !target equals m i get each p = m i get parameter types p length != parameter types length each j = 0 j < p length j++ !p j assignable parameter types j each result != runtime ambiguous +m i + vs +result result = m i result == runtime +target name+ +target get result == result = raise result result != result = result result raise m = m get declaring modifier m get modifiers modifier get modifiers m yes! search which m sc = get superclass sc != sm = raise m sc sm != sm ints = get i = 0 i < ints length i++ im = raise m ints i im != im m here raise m sm = get m get m get parameter types raise sm ee generic listener 