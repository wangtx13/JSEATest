/* * @ # draw project 1 1 2006 06 10 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * * */package samples net prefs * gui * io * undo * * * beans * io * reflect * * border * app * app action * draw * draw action * xml * samples pert figures * /** * a pert drawing project * * @author werner randelshofer * @version 1 1 2006 06 10 extended to support draw application model * <br>1 0 2006 02 07 created */public net project project { /** * each draw project uses its own undo redo manager * allows undoing and redoing actions per project */ undo redo manager undo /** * depending on the type of an application there may be one editor per * project or a single shared editor all projects */ drawing editor editor grid constrainer visible constrainer = grid constrainer 10 10 grid constrainer invisible constrainer = grid constrainer 1 1 preferences prefs button toggle grid button /** * creates a project */ net project { } /** * initializes the project */ init { init init components j panel zoom button panel = j panel border layout scroll pane set layout placard scroll pane layout scroll pane set border empty border 0 0 0 0 set editor drawing editor view set dom factory net factory undo = undo redo manager view set drawing drawing view get drawing add undoable edit listener undo init actions undo add property change listener property change listener { property change property change event evt { set has unsaved changes undo has significant edits } } resource bundle labels = resource bundle get l a f bundle draw labels j panel placard panel = j panel border layout button p button p button = tool bar button factory create zoom button view p button put client property quaqua button style placard p button put client property quaqua component visual margin insets 0 0 0 0 p button set font u i manager get font small font placard panel add p button border layout w e s t toggle grid button = p button = tool bar button factory create toggle grid button view p button put client property quaqua button style placard p button put client property quaqua component visual margin insets 0 0 0 0 p button set font u i manager get font small font labels configure tool bar button p button align grid small placard panel add p button border layout e a s t scroll pane add placard panel j scroll pane l o w e r l e f t c o r n e r prefs = preferences user node get toggle grid button set selected prefs get project grid visible set scale factor prefs get project scale factor 1d view add property change listener property change listener { property change property change event evt { name = evt get property name name equals constrainer { prefs put project grid visible constrainer evt get value is visible fire property change grid visible constrainer evt get old value is visible constrainer evt get value is visible } name equals scale factor { prefs put project scale factor evt get value fire property change scale factor evt get old value evt get value } } } } drawing editor get editor { editor } set editor drawing editor value { drawing editor old value = editor old value != { old value remove view } editor = value value != { value add view } } set grid visible value { x x x is messy we should something on view toggle grid button set selected value } is grid visible { view get constrainer is visible } get scale factor { view get scale factor } set scale factor value { view set scale factor value } /** * initializes project specific actions */ init actions { put action undo action undo get undo action put action redo action undo get redo action } set has unsaved changes value { set has unsaved changes value undo set has significant edits value } /** * writes the project to the specified */ write f i o { output stream out = { out = buffered output stream output stream f nano xml lite dom output domo = nano xml lite dom output view get dom factory domo write view get drawing domo save out } { out != { out close } i o e {} out != out close } } /** * reads the project from the specified */ read f i o { input stream in = { in = buffered input stream input stream f nano xml lite dom input domi = nano xml lite dom input view get dom factory in drawing drawing = drawing domi read utilities and wait runnable { run { view get drawing remove undoable edit listener undo view set drawing drawing view get drawing add undoable edit listener undo undo discard all edits }} } interrupted e { internal = internal e init cause e } invocation target e { internal = internal e init cause e } { in != { in close } i o e {} } } /** * sets a drawing editor the project */ set drawing editor drawing editor value { editor != { editor remove view } editor = value editor != { editor add view } } /** * gets the drawing editor of the project */ drawing editor get drawing editor { editor } /** * clears the project */ clear { view set drawing drawing undo discard all edits } @ override j chooser create open chooser { j chooser c = create open chooser c add choosable filter extension filter net diagram xml c } @ override j chooser create save chooser { j chooser c = create save chooser c add choosable filter extension filter net diagram xml c } /** is called from within the constructor to * initialize the form * w a r n i n g n o t modify the content of is * always regenerated by the form editor */ <editor fold defaultstate= collapsed desc= generated > g e n b e g i n init components init components { scroll pane = j scroll pane view = draw drawing view set layout border layout scroll pane set horizontal scroll bar policy scroll pane constants h o r i z o n t a l s c r o l l b a r a l w a y s scroll pane set vertical scroll bar policy scroll pane constants v e r t i c a l s c r o l l b a r a l w a y s scroll pane set viewport view view add scroll pane border layout c e n t e r } </editor fold> g e n e n d init components variables declaration not modify g e n b e g i n variables j scroll pane scroll pane draw drawing view view end of variables declaration g e n e n d variables } 