/* * @ # s v g drawing 1 0 july 8 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package samples svg io i o draw * samples svg figures * xml * /** * s v g drawing * * @author werner randelshofer * @version 1 0 july 8 2006 created */public s v g drawing drawing { title description /** creates a instance */ s v g drawing { } set title value { old value = title title = value fire property change title old value value } get title { title } set description value { old value = description description = value fire property change description old value value } get description { description } read dom input in i o { i=0 n = in get element count i < n i++ { in open element i name = in get tag name name equals title { title = in get text in close element } name equals desc { description = in get text in close element } name equals defs { we ignore defs elements now in close element } name equals use { we ignore use elements now in close element } name equals script { we ignore script elements now in close element } name equals style { we ignore style elements now in close element } name equals radial gradient { we ignore radial gradient elements now in close element } { in close element f = in read i f s v g drawing { s v g group g = s v g group g will change figure child s v g drawing f get figures { g basic add child } g changed ! g is empty { add g } } f s v g figure { ! s v g figure f is empty { add figure f } } { i o unexpected child +f } } } read attributes in } read attributes dom input in i o { s v g read attributes in } @ override write dom output out i o { out add attribute xmlns http www w3 org/2000/svg out add attribute 1 2 out add attribute base profile tiny figure f get figures { out write f } }} 