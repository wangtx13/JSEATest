/* * @ # floating text area 1 0 1 2006 02 27 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * * * project 		 j hotdraw a g u i framework technical drawings *				http www *				http sourceforge net * copyright 	??? by the original author s and all contributors * license 		 lesser g n u license l g p l *				http www opensource org/licenses/lgpl license html */package draw geom * * border factory j text area j scroll pane /** * a floating text area overlays an editor on top of an area in a drawing */public floating text area { /** * a scroll pane to allow vertical scrolling editing */ j scroll pane edit scroll container /** * the actual editor */ j text area edit widget /** * the drawing view */ drawing view view /** * constructor the floating text area */ floating text area { edit widget = j text area edit widget set wrap style word edit widget set line wrap edit scroll container = j scroll pane edit widget j scroll pane v e r t i c a l s c r o l l b a r a l w a y s j scroll pane h o r i z o n t a l s c r o l l b a r n e v e r edit scroll container set cursor cursor get predefined cursor cursor d e f a u l t c u r s o r edit scroll container set border border factory create line border color black } /** * creates the overlay within the given container * @param view the drawing view */ create overlay drawing view view { create overlay view } request focus { edit widget request focus } /** * creates the overlay the given container using a * specific font * @param view the drawing view * @param figure the figure holding the text */ create overlay drawing view view text holder figure { view get container add edit scroll container 0 figure != { font f = figure get font f i x m e should scale with fractional value! f = f derive font f get style f get size * view get scale factor edit widget set font f edit widget set foreground figure get text color edit widget set background figure get fill color edit widget set tab size figure get tab size } view = view } /** * positions and sizes the overlay * @param r the bounding rectangle2 d the overlay * @param text the text to edit */ set bounds rectangle2 d r text { edit widget set text text edit scroll container set bounds view drawing to view r edit scroll container set visible edit widget set caret position 0 edit widget request focus } /** * gets the text contents of the overlay * @return the text value */ get text { edit widget get text } /** * gets the preferred size of the overlay * @param cols description of the parameter * @return the preferred size value */ dimension get preferred size cols { dimension edit widget get width edit widget get height } /** * removes the overlay */ end overlay { view get container request focus edit scroll container != { edit scroll container set visible view get container remove edit scroll container rectangle bounds = edit scroll container get bounds view get container repaint bounds x bounds y bounds width bounds height } }} 