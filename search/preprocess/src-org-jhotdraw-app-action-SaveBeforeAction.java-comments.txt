/* * @ # save before action 2 0 2006 06 15 * * copyright c 2005 2006 werner randelshofer * staldenmattweg 2 immensee c h 6405 switzerland * all rights reserved * * software is the confidential and proprietary information of * werner randelshofer confidential information you shall not * disclose such confidential information and shall use it only in * accordance with the terms of the license agreement you entered into * with werner randelshofer */package app action io * gui * gui event * * * event * * io * app application app project /** * base actions that can only be safely performed when the project * has no unsaved changes * <p> * the project has no unsaved changes it is invoked immediately * unsaved changes are present a dialog is shown asking whether the user * wants to discard the changes cancel or save the changes before doing it * the user chooses to discard the chanegs to it is invoked immediately * the user chooses to cancel the action is aborted * the user chooses to save the changes the project is saved and it * is only invoked after the project was successfully saved * * @author werner randelshofer * @version 2 0 2006 06 15 reworked * <br>1 2 2006 05 19 make filename acceptable by extension filter * <br>1 1 2006 05 03 localized messages * <br>1 0 27 september 2005 created */public save before action project action { component old focus owner /** creates a instance */ save before action application app { app } action performed action event evt { project p = get current project p is enabled { resource bundle labels = resource bundle get l a f bundle app labels window w ancestor = utilities get window ancestor p get component old focus owner = w ancestor == ? w ancestor get focus owner p set enabled p has unsaved changes { j option pane pane = j option pane <html> + u i manager get option pane css + labels get save before message j option pane w a r n i n g m e s s a g e options = { labels get save labels get cancel labels get dont save } pane set options options pane set initial value options 0 pane put client property quaqua option pane destructive option 2 j sheet show sheet pane p get component sheet listener { option selected sheet event evt { value = evt get value value == || value equals labels get cancel { p set enabled } value equals labels get dont save { it p p set enabled } value equals labels get save { save changes p } } } } { it p p set enabled old focus owner != { old focus owner request focus } } } } save changes project p { p get == { j chooser chooser = p get save chooser option = chooser show save dialog j sheet show save sheet chooser p get component sheet listener { option selected sheet event evt { evt get option == j chooser a p p r o v e o p t i o n { evt get chooser get filter extension filter { = extension filter evt get chooser get filter make acceptable evt get chooser get selected } { = evt get chooser get selected } save to p } { p set enabled old focus owner != { old focus owner request focus } } } } } { save to p p get } } save to project p { p execute worker { construct { { p write } i o e { e } } finished value { saved p value } } } saved project p value { value == { p set p mark changes as saved it p } { resource bundle labels = resource bundle get l a f bundle app labels j sheet show message sheet p get component <html> + u i manager get option pane css + labels get formatted couldnt save value j option pane e r r o r m e s s a g e } p set enabled old focus owner != { old focus owner request focus } } it project p } 