/* * @ # tool bar button factory 1 2 2006 07 16 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action * * event * beans * text * * * text * app action * draw attribute keys * geom * draw * /** * tool bar button factory * * @author werner randelshofer * @version 1 2 2006 07 16 split some up better reuse * <br>1 1 2006 03 27 font exclusion list updated * <br>1 0 13 februar 2006 created */public tool bar button factory { map< color> d e f a u l t c o l o r s { linked hash map< color> m = linked hash map< color> m put cayenne color 128 0 0 m put asparagus color 128 128 0 m put clover color 0 128 0 m put teal color 0 128 128 m put midnight color 0 0 128 m put plum color 128 0 128 m put tin color 127 127 127 m put nickel color 128 128 128 m put maraschino color 255 0 0 m put lemon color 255 255 0 m put spring color 0 255 0 m put turquoise color 0 255 255 m put blueberry color 0 0 255 m put magenta color 255 0 255 m put steel color 102 102 102 m put aluminium color 153 153 153 m put salmon color 255 102 102 m put banana color 255 255 102 m put flora color 102 255 102 m put ice color 102 255 255 m put orchid color 102 102 255 m put bubblegum color 255 102 255 m put iron color 76 76 76 m put magnesium color 179 179 179 m put mocha color 128 64 0 m put fern color 64 128 0 m put moss color 0 128 64 m put ocean color 0 64 128 m put eggplant color 64 0 128 m put maroon color 128 0 64 m put tungsten color 51 51 51 m put silver color 204 204 204 m put tangerine color 255 128 0 m put lime color 128 255 0 m put sea foam color 0 255 128 m put aqua color 0 128 255 m put grape color 128 0 255 m put strawberry color 255 0 128 m put color 25 25 25 m put mercury color 230 230 230 m put cantaloupe color 255 204 102 m put honeydew color 204 255 102 m put spindrift color 102 255 204 m put sky color 102 204 255 m put lavender color 204 102 255 m put carnation color 255 111 207 m put licorice color 0 0 0 m put snow color 255 255 255 m put transparent d e f a u l t c o l o r s = collections unmodifiable map m } tool button listener item listener { tool tool drawing editor editor tool button listener tool t drawing editor editor { tool = t editor = editor } item state changed item event evt { evt get state change == item event s e l e c t e d { editor set tool tool } } } /** prevent instance creation */ tool bar button factory { } collection< action> create drawing actions drawing editor editor { linked list< action> a = linked list< action> a add cut action a add copy action a add paste action a add select all action a add select same action editor a } collection< action> create selection actions drawing editor editor { linked list< action> a = linked list< action> a add duplicate action a add separator a add group action editor a add ungroup action editor a add separator a add move to front action editor a add move to back action editor a } add selection tool to j tool bar tb drawing editor editor { add selection tool to tb editor create drawing actions editor create selection actions editor } add selection tool to j tool bar tb drawing editor editor collection< action> drawing actions collection< action> selection actions { resource bundle labels = resource bundle get l a f bundle draw labels j toggle button t tool tool hash map< object> attributes button group group tb get client property tool button group button group { group = button group tb get client property tool button group } { group = button group tb put client property tool button group group } selection tool tool selection tool = delegation selection tool drawing actions selection actions editor set tool selection tool t = j toggle button j toggle button tool button = t tool listener tool handler tb get client property tool handler tool listener { tool handler = tool listener tb get client property tool handler } { tool handler = tool listener { tool started tool event event { } tool done tool event event { tool button set selected } area invalidated tool event e { } } tb put client property tool handler tool handler } labels configure tool bar button t selection tool t set selected t add item listener tool button listener selection tool editor t set focusable group add t tb add t } /** * add selection tool to must have been invoked prior to on the * j tool bar * */ add tool to j tool bar tb drawing editor editor tool tool label key resource bundle labels { button group group = button group tb get client property tool button group tool listener tool handler = tool listener tb get client property tool handler j toggle button t = j toggle button labels configure tool bar button t label key t add item listener tool button listener tool editor t set focusable tool add tool listener tool handler group add t tb add t } add zoom buttons to j tool bar bar drawing editor editor { bar add create zoom button editor } button create zoom button drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button zoom popup button = j popup button labels configure tool bar button zoom popup button view zoom zoom popup button set focusable editor get drawing views size == 0 { zoom popup button set text 100 % } { zoom popup button set text editor get drawing views iterator next get scale factor * 100 + % } editor add property change listener property change listener { property change property change event evt { constants are interned evt get property name == focused view { evt get value == { zoom popup button set text 100 % } { zoom popup button set text editor get focused view get scale factor * 100 + % } } } } factors = {16 8 5 4 3 2 1 5 1 25 1 0 75 0 5 0 25 0 10} i=0 i < factors length i++ { zoom popup button add zoom editor action editor factors i zoom popup button { action performed event action event e { action performed e zoom popup button set text editor get view get scale factor * 100 + % } } } zoom popup button set preferred size dimension 16 16 zoom popup button set focusable zoom popup button } button create zoom button drawing view view { resource bundle labels = resource bundle get l a f bundle draw labels j popup button zoom popup button = j popup button labels configure tool bar button zoom popup button view zoom zoom popup button set focusable zoom popup button set text view get scale factor * 100 + % view add property change listener property change listener { property change property change event evt { constants are interned evt get property name == scale factor { zoom popup button set text view get scale factor * 100 + % } } } factors = {5 4 3 2 1 5 1 25 1 0 75 0 5 0 25 0 10} i=0 i < factors length i++ { zoom popup button add zoom action view factors i zoom popup button { action performed event action event e { action performed e zoom popup button set text view get scale factor * 100 + % } } } zoom popup button set preferred size dimension 16 16 zoom popup button set focusable zoom popup button } /** * creates toolbar buttons and adds them to the specified j tool bar */ add attributes buttons to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j button b b = bar add pick attributes action editor b set focusable b = bar add apply attributes action editor b set focusable bar add separator add color buttons to bar editor bar add separator add stroke buttons to bar editor bar add separator add font buttons to bar editor } add color buttons to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels add color button to bar editor s t r o k e c o l o r d e f a u l t c o l o r s 8 attribute stroke color labels add color button to bar editor f i l l c o l o r d e f a u l t c o l o r s 8 attribute fill color labels add color button to bar editor t e x t c o l o r d e f a u l t c o l o r s 8 attribute text color labels } /** * @param color map a map with named colors is usually a linked hash map * so that the colors are in a specific order */ add color button to j tool bar bar drawing editor editor attribute key attribute key map< color> color map column count label key resource bundle labels { j popup button popup button = j popup button popup button set action attribute action editor attribute key rectangle 0 0 22 22 popup button set column count column count map entry< color> entry color map entry set { attribute action a popup button add a= attribute action editor attribute key entry get value color icon entry get value a put value action s h o r t d e s c r i p t i o n entry get key } image icon chooser icon = image icon tool bar button factory get resource /org/jhotdraw/draw/action/images/show color chooser png popup button add color chooser action editor attribute key chooser icon labels configure tool bar button popup button label key popup button set icon color attribute icon editor attribute key labels get image icon label key tool bar button factory get image popup button set focusable editor add property change listener property change listener { property change property change event evt { popup button repaint } } bar add popup button } add stroke buttons to j tool bar bar drawing editor editor { add stroke decoration button to bar editor add stroke width button to bar editor add stroke dashes button to bar editor add stroke type button to bar editor add stroke placement button to bar editor } add stroke width button to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button stroke width popup button = j popup button labels configure tool bar button stroke width popup button attribute stroke width stroke width popup button set focusable widths = {0 5d 1d 2d 3d 5d 7d 9d 11d} number format formatter = number format get instance formatter decimal format { decimal format formatter set maximum fraction digits 1 decimal format formatter set minimum fraction digits 0 } i=0 i < widths length i++ { label = to widths i stroke width popup button add attribute action editor s t r o k e w t h widths i label stroke icon basic stroke widths i basic stroke c a p b u t t basic stroke j o i n b e v e l } bar add stroke width popup button } add stroke decoration button to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button stroke decoration popup button = j popup button labels configure tool bar button stroke decoration popup button attribute stroke decoration stroke decoration popup button set focusable stroke decoration popup button set column count 2 line decoration decorations = { arrow tip 0 35 12 11 3 arrow tip 0 35 13 7 } i=0 i < decorations length i++ { stroke decoration popup button add attribute action editor s t a r t d e c o r a t i o n decorations i line decoration icon decorations i stroke decoration popup button add attribute action editor e n d d e c o r a t i o n decorations i line decoration icon decorations i } bar add stroke decoration popup button } add stroke dashes button to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button stroke dashes popup button = j popup button labels configure tool bar button stroke dashes popup button attribute stroke dashes stroke dashes popup button set focusable dashes = { {4d 4d} {2d 2d} {4d 2d} {2d 4d} {8d 2d} {6d 2d 2d 2d} } stroke dashes popup button set column count 2 i=0 i < dashes length i++ { fdashes dashes i == { fdashes = } { fdashes = dashes i length j = 0 j < dashes i length j++ { fdashes j = dashes i j } } stroke dashes popup button add attribute action editor s t r o k e d a s h e s dashes i stroke icon basic stroke 2f basic stroke c a p b u t t basic stroke j o i n b e v e l 10f fdashes 0 } bar add stroke dashes popup button } add stroke type button to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button stroke type popup button = j popup button labels configure tool bar button stroke type popup button attribute stroke type stroke type popup button set focusable stroke type popup button add attribute action editor s t r o k e t y p e attribute keys stroke type b a s i c labels get attribute stroke type basic stroke icon basic stroke 1 basic stroke c a p b u t t basic stroke j o i n b e v e l hash map< attribute key object> attr = hash map< attribute key object> attr put s t r o k e t y p e attribute keys stroke type d o u b l e attr put s t r o k e i n n e r w t h f a c t o r 2d stroke type popup button add attribute action editor attr labels get attribute stroke type stroke icon stroke 2 1 attr = hash map< attribute key object> attr put s t r o k e t y p e attribute keys stroke type d o u b l e attr put s t r o k e i n n e r w t h f a c t o r 3d stroke type popup button add attribute action editor attr labels get attribute stroke type stroke icon stroke 3 1 attr = hash map< attribute key object> attr put s t r o k e t y p e attribute keys stroke type d o u b l e attr put s t r o k e i n n e r w t h f a c t o r 4d stroke type popup button add attribute action editor attr labels get attribute stroke type stroke icon stroke 4 1 bar add stroke type popup button } add stroke placement button to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button stroke placement popup button = j popup button labels configure tool bar button stroke placement popup button attribute stroke placement stroke placement popup button set focusable hash map< attribute key object> attr attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement c e n t e r attr put f i l l u n d e r s t r o k e attribute keys underfill c e n t e r stroke placement popup button add attribute action editor attr labels get attribute stroke placement center attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement i n s e attr put f i l l u n d e r s t r o k e attribute keys underfill c e n t e r stroke placement popup button add attribute action editor attr labels get attribute stroke placement inside attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement o u t s e attr put f i l l u n d e r s t r o k e attribute keys underfill c e n t e r stroke placement popup button add attribute action editor attr labels get attribute stroke placement outside attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement c e n t e r attr put f i l l u n d e r s t r o k e attribute keys underfill f u l l stroke placement popup button add attribute action editor attr labels get attribute stroke placement center filled attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement i n s e attr put f i l l u n d e r s t r o k e attribute keys underfill f u l l stroke placement popup button add attribute action editor attr labels get attribute stroke placement inside filled attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement o u t s e attr put f i l l u n d e r s t r o k e attribute keys underfill f u l l stroke placement popup button add attribute action editor attr labels get attribute stroke placement outside filled attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement c e n t e r attr put f i l l u n d e r s t r o k e attribute keys underfill n o n e stroke placement popup button add attribute action editor attr labels get attribute stroke placement center unfilled attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement i n s e attr put f i l l u n d e r s t r o k e attribute keys underfill n o n e stroke placement popup button add attribute action editor attr labels get attribute stroke placement inside unfilled attr = hash map< attribute key object> attr put s t r o k e p l a c e m e n t attribute keys stroke placement o u t s e attr put f i l l u n d e r s t r o k e attribute keys underfill n o n e stroke placement popup button add attribute action editor attr labels get attribute stroke placement outside unfilled bar add stroke placement popup button } add font buttons to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j popup button font popup button j button bold toggle button j button italic toggle button j button underline toggle button font popup button = j popup button bold toggle button = j button italic toggle button = j button underline toggle button = j button labels configure tool bar button font popup button attribute font font popup button set focusable font all fonts = graphics environment get local graphics environment get all fonts hash set< string> font exclusion list = hash set< string> arrays as list { mac o s x 10 3 font exclusion list # gung seo # head line a # p c myungjo # pil gi al bayan apple gothic apple sung apple myungjo arial hebrew ayuthaya baghdad biau kai charcoal c y corsiva hebrew deco type naskh devanagari m t fang song g b18030 bitmap geeza pro geezah geneva c y gujarati m t gurmukhi m t hei helvetica c y hiragino kaku gothic std hiragino maru gothic pro hiragino mincho pro hiragino kaku gothic pro inai mathi kai krungthep kufi standard g k hei pro song pro mshtakan monaco c y nadeem peninim m t osaka plantagenet cherokee raanana s t fangsong s t heiti s t kaiti s t song sathu silom thonburi times c y windows x p professional font exclusion list arial unicode m s batang estrangelo edessa gautami kartika latha lucida sans unicode mangal marlett m s mincho m s outlook m v boli o c r b 10 b t raavi shruti sim sun sylfaen symbol tunga vrinda wingdings wingdings 2 wingdings 3 z w adobe f } linked list< font> font list = linked list< font> i=0 i < all fonts length i++ { ! font exclusion list contains all fonts i get family { font list add all fonts i } } all fonts = font font list size all fonts = font font list to all fonts arrays sort all fonts comparator< font> { compare font f1 font f2 { result = f1 get family compare to f2 get family result == 0 { result = f1 get font name compare to f2 get font name } result } } linked list< font> font families = linked list< font> j menu submenu = i=0 i < all fonts length i++ { submenu != { ! all fonts i get family equals all fonts i 1 get family { submenu = } } submenu == { i < all fonts length 2 all fonts i get family equals all fonts i + 1 get family { font families add all fonts i submenu = j menu all fonts i get family submenu set font j popup button i t e m f o n t font popup button add submenu } } action action = attribute action editor f o n t f a c e all fonts i submenu == ? all fonts i get family all fonts i get font name styled editor kit font family action all fonts i get font name all fonts i get family submenu == { font families add all fonts i font popup button add action } { j menu item item = submenu add action item set font j popup button item font } } font popup button set column count math max 1 font families size /32 labels configure tool bar button bold toggle button attribute font bold bold toggle button set focusable labels configure tool bar button italic toggle button attribute font italic italic toggle button set focusable labels configure tool bar button underline toggle button attribute font underline underline toggle button set focusable bold toggle button add action listener attribute toggler editor f o n t b o l d t r u e f a l s e styled editor kit bold action italic toggle button add action listener attribute toggler editor f o n t i t a l i c t r u e f a l s e styled editor kit italic action underline toggle button add action listener attribute toggler editor f o n t u n d e r l i n e d t r u e f a l s e styled editor kit underline action bar add font popup button set focusable bar add bold toggle button set focusable bar add italic toggle button set focusable bar add underline toggle button set focusable } /** * creates toolbar buttons and adds them to the specified j tool bar */ add alignment buttons to j tool bar bar drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels bar add align action west editor set focusable bar add align action east editor set focusable bar add align action horizontal editor set focusable bar add align action north editor set focusable bar add align action south editor set focusable bar add align action vertical editor set focusable bar add separator bar add move action west editor set focusable bar add move action east editor set focusable bar add move action north editor set focusable bar add move action south editor set focusable bar add separator bar add move to front action editor set focusable bar add move to back action editor set focusable } /** * creates toolbar buttons and adds them to the specified j tool bar */ button create toggle grid button drawing editor editor { resource bundle labels = resource bundle get l a f bundle draw labels j toggle button toggle grid button toggle grid button = j toggle button labels configure tool bar button toggle grid button align grid toggle grid button set focusable toggle grid button add item listener item listener { item state changed item event event { constrainer c toggle grid button is selected { c = grid constrainer 10 10 } { c = grid constrainer 1 1 } drawing view v editor get drawing views { v set constrainer c v get container repaint } } } toggle grid button } /** * creates toolbar buttons and adds them to the specified j tool bar */ button create toggle grid button drawing view view { resource bundle labels = resource bundle get l a f bundle draw labels j toggle button toggle grid button toggle grid button = j toggle button labels configure tool bar button toggle grid button align grid toggle grid button set focusable toggle grid button add item listener item listener { item state changed item event event { constrainer c toggle grid button is selected { c = grid constrainer 10 10 } { c = grid constrainer 1 1 } view set constrainer c view get container repaint } } view add property change listener property change listener { property change property change event evt { constants are interned evt get property name == grid constrainer { constrainer c = constrainer evt get value toggle grid button set selected c is visible } } } toggle grid button } } 