/* * @ # selection tool 1 0 2003 12 01 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw * event * /** * tool to select and manipulate figures * a selection tool is in one of three states e g background * selection figure selection handle manipulation the different * states are handled by different tracker * * @author werner randelshofer * @version 1 0 2003 12 01 derived from 5 4b1 */public selection tool tool tool listener { /** * the tracker encapsulates the current state of the selection tool */ tool tracker /** creates a instance */ selection tool { tracker = create area tracker tracker add tool listener } activate drawing editor editor { activate editor tracker activate editor } deactivate drawing editor editor { deactivate editor tracker deactivate editor } key pressed key event e { tracker key pressed e } key released key event evt { tracker key released evt } key typed key event evt { tracker key typed evt } mouse clicked mouse event evt { tracker mouse clicked evt } mouse dragged mouse event evt { tracker mouse dragged evt } mouse entered mouse event evt { mouse entered evt tracker mouse entered evt } mouse exited mouse event evt { mouse exited evt tracker mouse exited evt } mouse moved mouse event evt { tracker mouse moved evt } mouse released mouse event evt { tracker mouse released evt } draw graphics2 d g { tracker draw g } mouse pressed mouse event evt { mouse pressed evt drawing view view = get view handle handle = view find handle anchor tool tracker = handle != { tracker = create handle tracker handle } { figure figure = view find figure anchor figure != { tracker = create drag tracker figure } { ! evt is shift down { view clear selection view set handle detail level 0 } tracker = create area tracker } } tracker != { set tracker tracker } tracker mouse pressed evt } set tracker tool tracker { tracker != { tracker deactivate get editor tracker remove tool listener } tracker = tracker tracker != { tracker activate get editor tracker add tool listener } } /** * factory to create a handle tracker it is used to track a handle */ tool create handle tracker handle handle { handle tracker handle get view get compatible handles handle } /** * factory to create a drag tracker it is used to drag a figure */ tool create drag tracker figure f { drag tracker f } /** * factory to create an area tracker it is used to select an * area */ tool create area tracker { select area tracker } tool started tool event event { } tool done tool event event { empty tool tracker = create area tracker tracker != { tracker != { tracker deactivate get editor tracker remove tool listener } tracker = tracker tracker activate get editor tracker add tool listener } fire tool done } /** * sent when an area of the drawing view needs to be repainted */ area invalidated tool event e { fire area invalidated e get invalidated area }} 