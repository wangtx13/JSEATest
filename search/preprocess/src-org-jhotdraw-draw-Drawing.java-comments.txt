/* * @ # drawing 2 0 2006 01 14 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw xml dom storable graphics2 d font * geom * * undo * event * io * /** * drawing is a container figures * <p> * drawing sends out drawing changed events to drawing change listeners * whenever a part of its area was invalidated * * @author werner randelshofer * @version 2 0 2006 01 14 changed to support precision coordinates * <br>1 0 2003 12 01 derived from 5 4b1 */public drawing serializable dom storable { /** * removes all figures from the drawing */ clear /** * adds a figure to the drawing * the drawing sends an <code>add notify</code> message to the figure * after it has been added * * @param figure to be added to the drawing */ add figure figure /** * adds a collection of figures to the drawing * the drawing sends an <code>add notify</code> message to each figure * after it has been added * * @param figures to be added to the drawing */ add all collection< figure> figures /** * removes a figure from the drawing * the drawing sends a <code>remove notify</code> message to the figure * before it is removed * * @param figure that is part of the drawing and should be removed */ remove figure figure /** * removes the specified figures from the drawing * the drawing sends a <code>remove notify</code> message to each figure * before it is removed * * @param figures a collection of figures which are part of the drawing * and should be removed */ remove all collection< figure> figures /** * removes a figure temporarily from the drawing * the drawing sends no </code>remove notify</code> message to the figure * * @see #basic add figure * @param figure that is part of the drawing and should be removed */ basic remove figure figure /** * removes the specified figures temporarily from the drawing * the drawing sends no </code>remove notify</code> message to the figures * * @see #basic add all collection * @param figures a collection of figures which are part of the drawing * and should be removed */ basic remove all collection< figure> figures /** * reinserts a figure which was temporarily removed using basic remove * the drawing sends no <code>add notify</code> message to the figure * * @see #basic remove figure * @param figure that is part of the drawing and should be removed */ basic add figure figure /** * reinserts a figure which was temporarily removed using basic remove * the drawing sends no <code>add notify</code> message to the figure * * @see #basic remove figure * @param figure that is part of the drawing and should be removed */ basic add index figure figure /** * reinssets the specified figures which were temporarily basic removeed from * the drawing * the drawing sends no <code>add notify</code> message to the figures * * @see #basic remove all collection * @param figures a collection of figures which are part of the drawing * and should be reinserted */ basic add all collection< figure> figures /** * draws all the figures from back to front */ draw graphics2 d g /** * draws only the figures in the supplied set * / * draw graphics2 d g list figures */ /** * all figures that lie within or intersect the specified * bounds the figures are in z order from back to front */ collection< figure> find figures rectangle2 d bounds /** * all figures that lie within the specified * bounds the figures are in z order from back to front */ collection< figure> find figures within rectangle2 d bounds /** * the figures of the drawing * @return a collection of figure's */ collection< figure> get figures /** * the number of figures in drawing */ get figure count /** * finds a top level figure use call hit detection that * should not descend into the figure's children */ figure find figure point2 d p /** * finds a top level figure use call hit detection that * should not descend into the figure's children */ figure find figure except point2 d p figure ignore /** * finds a top level figure use call hit detection that * should not descend into the figure's children */ figure find figure except point2 d p collection< figure> ignore /** * drawing contains the specified figure */ contains figure f /** * a list of the figures in z order from front to back */ list< figure> get figures front to back /** * finds a figure but descends into a figure's * children use to implement <i>click through</i> * hit detection that is you want to detect the inner most * figure containing the given point */ figure find figure inside point2 d p /** * sends a figure to the back of the drawing * * @param figure that is part of the drawing */ send to back figure figure /** * brings a figure to the front * * @param figure that is part of the drawing */ bring to front figure figure /** * a copy of the provided collection which is sorted * in z order from back to front */ collection< figure> sort collection< figure> figures /** * adds a listener drawing */ add drawing listener drawing listener listener /** * removes a listener from drawing */ remove drawing listener drawing listener listener /** * adds a listener undooable edit events */ add undoable edit listener undoable edit listener l /** * removes a listener undoable edit events */ remove undoable edit listener undoable edit listener l /** * notify all listener list that have registered interest * notification on event type */ fire undoable edit happened undoable edit edit /** * the font render context used to text leyout and text drawing */ font render context get font render context /** * sets the font render context used to text leyout and text drawing */ set font render context font render context frc /** * the lock on which all threads acting in figures in * drawing synchronize to prevent race conditions */ get lock } 