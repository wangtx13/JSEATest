/* * @ # open action 2 0 1 2006 05 18 * * copyright c 2005 2006 werner randelshofer * staldenmattweg 2 immensee c h 6405 switzerland * all rights reserved * * software is the confidential and proprietary information of * werner randelshofer confidential information you shall not * disclose such confidential information and shall use it only in * accordance with the terms of the license agreement you entered into * with werner randelshofer */package app action * gui * gui event * * event * * prefs * * io * app application app project /** * opens a in project or in the current project it is empty * * @author werner randelshofer * @version 2 0 1 2006 05 18 print stack trace added * <br>2 0 2006 02 16 support preferences added * <br>1 0 1 2005 07 14 make project explicitly visible after creating it * <br>1 0 04 january 2005 created */public open action application action { = open /** creates a instance */ open action application app { app resource bundle labels = resource bundle get l a f bundle app labels labels configure action } action performed action event evt { application app = get application app is enabled { app set enabled search an empty project project empty project = app get current project empty project == || empty project get != || empty project has unsaved changes { empty project = /* project a project app projects { a project get == ! a project has unsaved changes { empty project = a project } }*/ } project p empty project == { p = app create project app add p } { p = empty project } j chooser chooser = p get open chooser chooser show open dialog app get component == j chooser a p p r o v e o p t i o n { app show p open chooser p } { app set enabled } } } open j chooser chooser project project { application app = get application = chooser get selected app set enabled there is another project with we set the multiple open of our project to max multiple open + 1 multiple open = 1 project a project app projects { a project != project a project get != a project get equals { multiple open = math max multiple open a project get multiple open + 1 } } project set multiple open multiple open open the project execute worker { construct { { project read } throwable e { e } } finished value { opened project value } } } opened project project value { application app = get application value == { project set project set enabled frame w = frame utilities get window ancestor project get component w != { w set extended state w get extended state ~ frame i c o n i f i e d w to front } project get component request focus app add recent app set enabled } { value throwable { throwable value print stack trace } j sheet show message sheet project get component <html> + u i manager get option pane css + <b> couldn't open the \ +file+ \ </b><br> + value j option pane e r r o r m e s s a g e sheet listener { option selected sheet event evt { app dispose project } } } }} 