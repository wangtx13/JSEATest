/* * @ # selected action 3 1 1 2006 07 09 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action draw drawing draw drawing editor draw drawing view draw figure selection event draw figure selection listener * beans * undo * * * /** * actions which act on the selected figures of a drawing * editor no figures are selected the action is disabled * * @author werner randelshofer * * @version 3 1 1 2006 07 09 fixed enabled state * <br>3 1 2006 03 15 support enabled state of view added * <br>3 0 2006 02 24 changed to support multiple views * <br>2 0 2006 02 14 updated to work with multiple views * <br>1 0 2003 12 01 created */public selected action action { drawing editor editor resource bundle labels = resource bundle get l a f bundle draw labels locale get property change listener property change handler = property change listener { property change property change event evt { evt get property name equals enabled { update enabled state } } } event handler property change listener figure selection listener { property change property change event evt { evt get property name equals focused view { evt get old value != { drawing view view = drawing view evt get old value view remove figure selection listener view remove property change listener property change handler } evt get value != { drawing view view = drawing view evt get value view add figure selection listener view add property change listener property change handler } update enabled state } } selection changed figure selection event evt { update enabled state } } event handler event handler = event handler /** creates an action which acts on the selected figures on the current view * of the specified editor */ selected action drawing editor editor { set editor editor update enabled state } update enabled state { get view != { set enabled get view is enabled get view get selection count > 0 } { set enabled } } dispose { editor != { editor remove property change listener event handler editor get view != { editor get view remove figure selection listener event handler } } editor = } set editor drawing editor editor { editor != { editor remove property change listener event handler get view != { get view remove figure selection listener event handler } } editor = editor editor != { editor add property change listener event handler } } drawing editor get editor { editor } drawing view get view { editor == ? editor get focused view } drawing get drawing { get view == ? get view get drawing } fire undoable edit happened undoable edit edit { get drawing fire undoable edit happened edit } } 