/* * @ # runnable worker 1 0 2002 05 18 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action utilities /** * is an that you subclass to * perform g u i related work in a dedicated event dispatcher * <p> * is compatible with worker where it is reasonable * to be so unlike a worker it does not use an internal * worker thread but has to be dispatched by a dispatcher which * handles active event's * * @author werner randelshofer * @version 1 0 2002 05 18 created */public runnable worker runnable { value see get value set value /** * calls #construct on the current thread and * #finished on the a w t event dispatcher thread */ run { runnable finished = runnable { run { finished get value } } { set value construct } throwable e { e print stack trace } { utilities later finished } } /** * compute the value to be by the <code>get</code> */ construct /** * called on the event dispatching thread not on the worker thread * after the <code>construct</code> has */ finished value { } /** * get the value produced by the worker thread or it * hasn't been constructed yet */ get value { value } /** * set the value produced by worker thread */ set value x { value = x }} 