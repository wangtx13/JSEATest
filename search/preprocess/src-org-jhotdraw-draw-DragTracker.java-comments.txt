/* * @ # drag tracker 2 0 2006 01 14 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw * geom * event * * /** * drag tracker * * @author werner randelshofer * @version 2 0 2006 01 14 changed to support precision coordinates * <br>1 0 2003 12 01 derived from 5 4b1 */public drag tracker tool { figure anchor figure point2 d old point point2 d anchor point is dragging /** creates a instance */ drag tracker figure figure { anchor figure = figure } mouse moved mouse event evt { update cursor editor find view container evt get source point evt get x evt get y } mouse pressed mouse event evt { mouse pressed evt drawing view view = get view evt is shift down { view set handle detail level 0 view toggle selection anchor figure ! view is figure selected anchor figure { anchor figure = } } ! view is figure selected anchor figure { view set handle detail level 0 view clear selection view add to selection anchor figure } point2 d origin = point2 d m a x v a l u e m a x v a l u e figure f view get selected figures { rectangle2 d b = f get bounds origin x = math min origin x b x origin y = math min origin y b y } point2 d constrained origin = view get constrainer constrain point point2 d origin x origin y old point = view get constrainer constrain point view view to drawing point evt get x evt get y old point x += origin x constrained origin x old point y += origin y constrained origin y anchor point = old point } mouse dragged mouse event evt { drawing view view = get view is dragging = { is dragging = update cursor editor find view container evt get source point evt get x evt get y } point2 d point = view get constrainer constrain point view view to drawing point evt get x evt get y affine transform tx = affine transform tx translate point x old point x point y old point y figure f view get selected figures { f will change f basic transform tx f changed } old point = point } mouse released mouse event evt { mouse released evt is dragging = x = evt get x y = evt get y update cursor editor find view container evt get source point evt get x evt get y point2 d p = get view get constrainer constrain point get view view to drawing point x y collection< figure> dragged figures = linked list get view get selected figures figure drop target = get drawing find figure except p dragged figures drop target != { snap back = drop target handle drop p dragged figures get view snap back { affine transform tx = affine transform tx translate anchor point x old point x anchor point y old point y figure f dragged figures { f will change f basic transform tx f changed } } { affine transform tx = affine transform tx translate anchor point x + old point x anchor point y + old point y ! tx is identity { get drawing fire undoable edit happened transform edit dragged figures tx } } } { affine transform tx = affine transform tx translate anchor point x + old point x anchor point y + old point y ! tx is identity { get drawing fire undoable edit happened transform edit dragged figures tx } } fire tool done }} 