/* * @ # ungroup action 1 1 2006 07 12 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action draw * undo * * * undo * /** * ungroup action * * @author werner randelshofer * @version 1 1 2006 07 12 changed to support any composite figure * <br>1 0 24 november 2003 created */public ungroup action selected action { = selection ungroup /** creates a instance */ composite figure prototype /** creates a instance */ ungroup action drawing editor editor { editor group figure } ungroup action drawing editor editor composite figure prototype { editor prototype = prototype labels configure action } @ override update enabled state { get view != { set enabled can ungroup } { set enabled } } can ungroup { get view get selection count == 1 get view get selected figures iterator next get equals prototype get } action performed event action event e { can ungroup { drawing view view = get view composite figure group = composite figure get view get selected figures iterator next linked list< figure> ungrouped figures = linked list< figure> composite edit edit = composite edit labels get selection ungroup { redo cannot redo { redo ungroup figures view group } undo cannot undo { group figures view group ungrouped figures undo } } fire undoable edit happened edit ungrouped figures add all ungroup figures view group fire undoable edit happened edit } } collection< figure> ungroup figures drawing view view composite figure group { linked list< figure> figures = linked list< figure> group get children view clear selection group basic remove all children view get drawing basic add all figures view get drawing remove group view add to selection figures figures } group figures drawing view view composite figure group collection< figure> figures { x x x is redundant with group action collection< figure> sorted = view get drawing sort figures view get drawing basic remove all figures view clear selection view get drawing add group group will change figure f sorted { group basic add f } group changed view add to selection group }} 