/* i xml builder nano xml/ * * $ revision 1 3 $ * $ date 2002/01/04 21 03 28 $ * $ name r e l e a s e 2 2 1 $ * * is part of nano xml 2 * copyright c 2000 2002 marc de scheemaecker all rights reserved * * software is provided 'as is' without any express or implied warranty * in no event will the authors be held liable any damages arising from the * use of software * * permission is granted to anyone to use software any purpose * including commercial applications and to alter it and redistribute it * freely subject to the following restrictions * * 1 the origin of software must not be misrepresented you must not * claim that you wrote the original software you use software in * a product an acknowledgment in the product documentation would be * appreciated but is not required * * 2 altered source versions must be plainly marked as such and must not be * misrepresented as being the original software * * 3 notice may not be removed or altered from any source distribution */package net n3 nanoxml io reader io i o /** * nano xml uses i xml builder to construct the xml data structure it retrieved * from its data source you can supply your own builder or you can use the * builder of nano xml * < p> * a of the builder an the parsing is aborted and * {@link net n3 nanoxml i xml parser#parse} an * {@link net n3 nanoxml xml exception} which encasulates the original * * * @see net n3 nanoxml i xml parser * * @author marc de scheemaecker * @version $ name r e l e a s e 2 2 1 $ $ revision 1 3 $ */public i xml builder{ /** * is called before the parser starts processing its input * * @param the of the xml data source * @param line nr the line on which the parsing starts * * @throws * an occurred processing the event */ start building line nr /** * is called when a processing instruction is encountered * a p i with a reserved target xml with any is never reported * * @param target the processing instruction target * @param reader the can retrieve the parameter of the p i from * reader you may close the reader before reading all its * data and you cannot read too much data * * @throws * an occurred processing the event */ processing instruction target reader reader /** * is called when a xml element is encountered * * @see #end element * * @param name the name of the element * @param ns prefix the prefix used to identify the namespace no * namespace has been specified parameter is * @param ns u r i the u r i associated with the namespace no * namespace has been specified or no u r i is * associated with ns prefix parameter is * @param the of the xml data source * @param line nr the line in the source where the element starts * * @throws * an occurred processing the event */ start element name ns prefix ns u r i line nr /** * is called when a attribute of an xml element is * encountered * * @param key the key name of the attribute * @param ns prefix the prefix used to identify the namespace no * namespace has been specified parameter is * @param ns u r i the u r i associated with the namespace no * namespace has been specified or no u r i is * associated with ns prefix parameter is * @param value the value of the attribute * @param type the type of the attribute no type is known * c d a t a is * * @throws * an occurred processing the event */ add attribute key ns prefix ns u r i value type /** * is called when the attributes of an xml element have been * processed * * @see #start element * @see #add attribute * * @param name the name of the element * @param ns prefix the prefix used to identify the namespace no * namespace has been specified parameter is * @param ns u r i the u r i associated with the namespace no * namespace has been specified or no u r i is * associated with ns prefix parameter is * * @throws * an occurred processing the event */ element attributes processed name ns prefix ns u r i /** * is called when the end of an xml elemnt is encountered * * @see #start element * * @param name the name of the element * @param ns prefix the prefix used to identify the namespace no * namespace has been specified parameter is * @param ns u r i the u r i associated with the namespace no * namespace has been specified or no u r i is * associated with ns prefix parameter is * * @throws * an occurred processing the event */ end element name ns prefix ns u r i /** * is called when a p c d a t a element is encountered a * reader is supplied from which you can read the data the reader will * only read the data of the element you don't need to check * boundaries you don't read the full element the rest of the data * is skipped you also don't have to care about entities they are * resolved by the parser * * @param reader the can retrieve the data from reader you * may close the reader before reading all its data and you * cannot read too much data * @param the of the xml data source * @param line nr the line in the source where the element starts * * @throws * an occurred processing the event */ add p c data reader reader line nr /** * the result of the building process is called just * before the < i>parse</ i> of i xml parser * * @see net n3 nanoxml i xml parser#parse * * @return the result of the building process * * @throws * an occurred processing the event */ get result } 