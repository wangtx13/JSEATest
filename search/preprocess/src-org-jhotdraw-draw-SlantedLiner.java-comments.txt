/* * @ # slanted liner 1 0 24 januar 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw xml dom input xml dom output xml dom storable * * geom * geom * /** * slanted liner * * * @author werner randelshofer * @version 1 0 24 januar 2006 created */public slanted liner liner dom storable { slant size /** creates a instance */ slanted liner { 20 } slanted liner slant size { slant size = slant size } collection< handle> create handles bezier path path { } lineout connection figure figure { bezier path path = line connection figure figure get bezier path connector start = figure get start connector connector end = figure get end connector start == || end == || path == { } ensure path has exactly four nodes path size < 4 { path add 1 bezier path node 0 0 } path size < 4 { path remove 1 } point2 d sp = start find start figure point2 d ep = end find end figure sp = figure get start point ep = figure get end point rectangle2 d sb = start get bounds rectangle2 d eb = end get bounds path get 0 move to sp path get path size 1 move to ep outcode = sb outcode sp outcode == 0 { outcode = geom outcode sb eb } outcode geom o u t r i g h t != 0 { path get 1 move to sp x + slant size sp y } outcode geom o u t l e f t != 0 { path get 1 move to sp x slant size sp y } outcode geom o u t b o t t o m != 0 { path get 1 move to sp x sp y + slant size } { path get 1 move to sp x sp y slant size } outcode = eb outcode ep outcode == 0 { outcode = geom outcode eb sb } outcode geom o u t r i g h t != 0 { path get 2 move to ep x + slant size ep y } outcode geom o u t l e f t != 0 { path get 2 move to ep x slant size ep y } outcode geom o u t b o t t o m != 0 { path get 2 move to ep x ep y + slant size } { path get 2 move to ep x ep y slant size } path invalidate path } read dom input in { slant size = in get attribute slant 20d } write dom output out { out add attribute slant slant size } liner clone { { liner clone } clone not supported ex { internal = internal ex get message init cause ex } }} 