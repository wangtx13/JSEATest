/* * @ # project 1 1 1 2006 04 11 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app app action select all action io * * * * concurrent * prefs * /** * project * * * @author werner randelshofer * @version 1 1 1 2006 04 11 fixed project preferences * <br>1 1 2006 02 16 support preferences added * <br>1 0 january 3 2006 created */public project j panel project { application application j chooser save chooser j chooser open chooser executor executor hash map actions has unsaved changes preferences prefs multiple open = 1 is showing /** * creates a instance */ project { } init { prefs = preferences user node get init components } /** is called from within the constructor to * initialize the form * w a r n i n g n o t modify the content of is * always regenerated by the form editor */ init components { g e n b e g i n init components set layout border layout } g e n e n d init components variables declaration not modify g e n b e g i n variables end of variables declaration g e n e n d variables set application application value { application old value = application application = value fire property change application old value value } application get application { application } j component get component { } get { } set value { old value = = value prefs != value != { prefs put project value get path } fire property change old value value } /** * gets the open chooser the project */ j chooser get open chooser { open chooser == { open chooser = create open chooser } open chooser } j chooser create open chooser { j chooser c = j chooser prefs != { c set selected prefs get project get property user home } c } /** * gets the save chooser the project */ j chooser get save chooser { save chooser == { save chooser = create save chooser } save chooser } j chooser create save chooser { j chooser c = j chooser prefs != { c set current directory prefs get project get property user home } c } /** * the project has unsaved changes * is a bound property */ has unsaved changes { has unsaved changes } set has unsaved changes value { old value = has unsaved changes has unsaved changes = value fire property change has unsaved changes old value value } /** * gets rid of all the resources of the project * no other should be invoked on the project afterwards */ dispose { } /** * the action with the specified */ action get action { actions == ? action actions get } /** * puts an action with the specified */ put action action action { actions == { actions = hash map } action == { actions remove } { actions put action } } /** * executes the specified runnable on the worker thread of the project * execution is perfomred sequentially in the same sequence as the * runnables have been passed to */ execute runnable worker { executor == { executor = executors single thread executor } executor execute worker } set multiple open value { old value = multiple open multiple open = value fire property change multiple open old value value } get multiple open { multiple open } set showing value { old value = is showing is showing = value fire property change showing old value value } is showing { is showing } mark changes as saved { set has unsaved changes }} 