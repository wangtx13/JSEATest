/* * @ # application model 1 0 june 10 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app beans * * * /** * application model * * @author werner randelshofer * @version 1 0 june 10 2006 created */public application model bean application model { hash map< action> actions name copyright project project name /** creates a instance */ application model { } set name value { old value = name name = value fire property change name old value value } get name { name } set value { old value = = value fire property change old value value } get { } set copyright value { old value = copyright copyright = value fire property change copyright old value value } get copyright { copyright } /** * use best application startup performance */ set project name value { old value = project name project name = value fire property change project name old value value } /** * use only set project name does not suit you */ set project value { old value = project project = value fire property change project old value value } get project { project == { project name != { { project = name project name } e { internal = internal unable to get project init cause e } } } project } project create project { { project get project instance } e { internal = internal unable to create project init cause e } } /** * creates toolbars the application * always an empty list subclasses may other * values * * x x x we should not need to create a toolbar until the user needs to work * with it */ list< j tool bar> create tool bars application a project p { linked list< j tool bar> } list< j menu> create menus application a project p { linked list< j menu> } init project application a project p { } init application application a { } /** * the action with the specified */ action get action { actions == ? action actions get } /** * puts an action with the specified */ put action action action { actions == { actions = hash map< action> } action == { actions remove } { actions put action } }} 