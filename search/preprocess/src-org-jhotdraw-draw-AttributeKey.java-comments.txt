/* * @ # attribute key 1 0 1 2006 07 14 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw reflect * /** * provides typesafe getter and setter a figure attribute * an attribute key has a name a type and a value the value * is by figure get attribute a figure does not have an attribute * of the specified key * * @author werner randelshofer * @version 1 0 1 2006 07 14 values are not anymore when * values are not allowed * <br>1 0 7 juni 2006 created */public attribute key< t> { key t value is value allowed /** creates a instance */ attribute key key { key } attribute key key t value { key value } attribute key key t value is value allowed { key = key value = value is value allowed = is value allowed } get key { key } t get value { value } t get figure f { t value = t f get attribute value == ! is value allowed ? value value } set figure f t value { value == ! is value allowed { pointer value not allowed attribute key +key } f set attribute value } basic set figure f t value { value == ! is value allowed { pointer value not allowed attribute key +key } f basic set attribute value } equals o { o attribute key { attribute key that = attribute key o that key equals key } } hash { key hash } to { key } is value allowed { is value allowed } { type variable v = attribute key< double> hey get get type 0 } is assignable value { value == { is value allowed } x x x works but maybe there is an easier way to this? { t a = t value } cast e { } }} 