/* * @ # tool 3 0 2006 02 15 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw undo composite edit * geom * event * event * * /** * tool * * @author werner randelshofer * @version 3 0 2006 02 15 updated to handle multiple views * <br>2 0 2006 01 14 changed to support precision coordinates * <br>1 0 2003 12 01 derived from 5 4b1 */public tool tool { /** * is set to is the active tool of the editor */ is active /** * is set to the tool is doing some work * prevents the current view from being changed when a mouse enter * event is received */ is working drawing editor editor point anchor = point event listener list listener list = event listener list /** creates a instance */ tool { } add undoable edit listener undoable edit listener l { listener list add undoable edit listener l } remove undoable edit listener undoable edit listener l { listener list remove undoable edit listener l } activate drawing editor editor { editor = editor is active = editor get view request focus } deactivate drawing editor editor { editor = editor is active = } is active { is active } drawing view get view { editor get view } drawing editor get editor { editor } drawing get drawing { get view get drawing } point2 d view to drawing point p { constrain point get view view to drawing p } point2 d constrain point point p { constrain point get view view to drawing p } point2 d constrain point point2 d p { get view get constrainer constrain point p } /** * deletes the selection * depending on the tool could be selected figures selected points * or selected text */ edit delete { get view get drawing remove all get view get selected figures } /** * cuts the selection into the clipboard * depending on the tool could be selected figures selected points * or selected text */ edit cut { } /** * copies the selection into the clipboard * depending on the tool could be selected figures selected points * or selected text */ edit copy { } /** * duplicates the selection * depending on the tool could be selected figures selected points * or selected text */ edit duplicate { } /** * pastes the contents of the clipboard * depending on the tool could be selected figures selected points * or selected text */ edit paste { } key released key event evt { fire tool done } key typed key event evt { } key pressed key event evt { evt get source container { editor set view editor find view container evt get source } fire tool started evt get composite edit edit evt get key { key event v k d e l e t e key event v k b a c k s p a c e { edit delete } key event v k a { evt get modifiers key event c t r l m a s k | key event m e t a m a s k != 0 { get view add to selection get view get drawing get figures } } key event v k l e f t { collection< figure> figures = get view get selected figures affine transform tx = affine transform tx translate 1 0 figure f figures { f will change f basic transform tx f changed } get drawing fire undoable edit happened transform edit figures tx } key event v k r i g h t { collection< figure> figures = get view get selected figures affine transform tx = affine transform tx translate 1 0 figure f figures { f will change f basic transform tx f changed } get drawing fire undoable edit happened transform edit figures tx } key event v k u p { collection< figure> figures = get view get selected figures affine transform tx = affine transform tx translate 0 1 figure f figures { f will change f basic transform tx f changed } get drawing fire undoable edit happened transform edit figures tx } key event v k d o w n { collection< figure> figures = get view get selected figures get drawing fire undoable edit happened edit = composite edit figur en verschieben affine transform tx = affine transform tx translate 0 1 figure f figures { f will change f basic transform tx f changed } get drawing fire undoable edit happened transform edit figures tx } } } mouse clicked mouse event evt { } mouse entered mouse event evt { ! is working { editor set view editor find view container evt get source } } mouse exited mouse event evt { } mouse moved mouse event evt { } mouse pressed mouse event evt { drawing view view = editor find view container evt get source view request focus anchor = point evt get x evt get y is working = fire tool started view } mouse released mouse event evt { is working = } add tool listener tool listener l { listener list add tool listener l } remove tool listener tool listener l { listener list remove tool listener l } /** * notify all listener list that have registered interest * notification on event type */ fire tool started drawing view view { tool event event = notify all listeners that have registered interest guaranteed to a non listeners = listener list get listener list process the listeners last to first notifying those that are interested in event i = listeners length 2 i>=0 i =2 { listeners i == tool listener { lazily create the event event == event = tool event view rectangle 0 0 1 1 tool listener listeners i+1 tool started event } } } /** * notify all listener list that have registered interest * notification on event type */ fire tool done { tool event event = notify all listeners that have registered interest guaranteed to a non listeners = listener list get listener list process the listeners last to first notifying those that are interested in event i = listeners length 2 i>=0 i =2 { listeners i == tool listener { lazily create the event event == event = tool event get view rectangle 0 0 1 1 tool listener listeners i+1 tool done event } } } /** * notify all listener list that have registered interest * notification on event type */ fire area invalidated rectangle2 d r { point p1 = get view drawing to view point2 d r x r y point p2 = get view drawing to view point2 d r x+r width r y+r height fire area invalidated rectangle p1 x p1 y p2 x p1 x p2 y p1 y } /** * notify all listener list that have registered interest * notification on event type */ fire area invalidated rectangle invalidated area { tool event event = notify all listeners that have registered interest guaranteed to a non listeners = listener list get listener list process the listeners last to first notifying those that are interested in event i = listeners length 2 i>=0 i =2 { listeners i == tool listener { lazily create the event event == event = tool event get view invalidated area tool listener listeners i+1 area invalidated event } } } draw graphics2 d g { } update cursor drawing view view point p { handle handle = view find handle p handle != { view set cursor handle get cursor } { figure figure = view find figure p figure != { view set cursor figure get cursor view view to drawing p } { view set cursor cursor get cursor } } }} 