/* * @ # project action 1 0 october 9 2005 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app action * event * beans * * event * app application app project /** * an action that acts on on the current <code> project</code> of an * <code> application</code> * the current project is disabled or is the * project action is disabled as well * * @author werner randelshofer * @version 1 0 october 9 2005 created * @see app project * @see app application */public project action action { application app property change listener application listener = property change listener { property change property change event evt { evt get property name == current project { strings get interned update project project evt get old value project evt get value } } } property change listener project listener = property change listener { property change property change event evt { evt get property name == enabled { strings get interned update enabled evt get old value evt get value } } } /** creates a instance */ project action application app { app = app app != { app add property change listener application listener update project app get current project } } /** * updates the project of action depending on the current project * of the application */ update project project old value project value { old value != { uninstall project listeners old value } value != { install project listeners value } fire property change project old value value update enabled old value != old value is enabled value != value is enabled } /** * installs listeners on the project */ install project listeners project p { p add property change listener project listener } /** * installs listeners on the project */ uninstall project listeners project p { p remove property change listener project listener } /** * updates the enabled state of action depending on the enabled * state of the project */ update enabled old value value { set enabled is enabled fire property change project enabled old value value } application get application { app } project get current project { app get current project } /** * the action is enabled * the enabled state of the action depends on the state that has been set * using set enabled and on the enabled state of the application * * @return the action is enabled otherwise * @see action#is enabled */ @ override is enabled { get current project != get current project is enabled || is enabled } /** * enables or disables the action the enabled state of the action * depends on the value that is set here and on the enabled state of * the application * * @param value to enable the action to * disable it * @see action#set enabled */ @ override set enabled value { old value = enabled enabled = value proj is enabled = get current project != get current project is enabled fire property change enabled value of old value proj is enabled value of value proj is enabled }} 