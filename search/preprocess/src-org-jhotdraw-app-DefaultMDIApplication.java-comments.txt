/* * @ # m d i application 1 0 june 5 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app gui * * prefs * * event * beans * io * * prefs * * event * app action * /** * a m d i application can handle the life cycle of multiple document windows each * being presented in a j internal frame of its own a parent j frame provides all * the functionality needed to work with documents such as a menu bar tool * bars and palette windows * * * @author werner randelshofer * @version 1 0 june 5 2006 created */public m d i application application { j frame parent frame j scroll pane scroll pane m d idesktop pane desktop pane preferences prefs project current project linked list< action> tool bar actions /** creates a instance */ m d i application { } init application actions { application model mo = get model mo put action about action about action mo put action exit action exit action mo put action o s x drop on dock action o s x drop on dock action mo put action action action mo put action open action open action mo put action clear recent files action clear recent files action mo put action save action save action mo put action save as action save as action mo put action close action close action mo put action undo action undo action mo put action redo action redo action mo put action cut action cut action mo put action copy action copy action mo put action paste action paste action mo put action delete action delete action mo put action duplicate action duplicate action mo put action select all action select all action /* mo put action maximize action maximize action mo put action minimize action minimize action */ mo put action arrange action v e r t i c a l arrange action desktop pane arrangeable arrangement v e r t i c a l mo put action arrange action h o r i z o n t a l arrange action desktop pane arrangeable arrangement h o r i z o n t a l mo put action arrange action c a s c a d e arrange action desktop pane arrangeable arrangement c a s c a d e } init project actions project p { p put action focus action focus action p } launch { set property apple graphics use quartz launch } init { init prefs = preferences user node get model == ? get get model get init look and feel init labels parent frame = j frame get name parent frame set close operation j frame d o n o t h i n g o n c l o s e desktop pane = m d idesktop pane scroll pane = j scroll pane scroll pane set viewport view desktop pane tool bar actions = linked list< action> init application actions parent frame get content pane add wrap desktop pane scroll pane tool bar actions parent frame add window listener window adapter { window closing window event evt { get model get action exit action action performed action event parent frame action event a c t i o n p e r f o r m e d window closing } } parent frame set j menu bar create menu bar preferences install frame prefs handler prefs parent frame parent frame parent frame set visible } init look and feel { set property apple laf use screen menu bar set property com apple macos use screen menu bar set property apple graphics use quartz { laf name = u i manager get look and feel name u i manager set look and feel laf name } e { e print stack trace } u i manager get option pane css == { u i manager put option pane css } } show project p { ! p is showing { p set showing = p get j internal frame f = j internal frame title == { title = labels get unnamed } { title = get name } f set title labels get formatted internal frame title title get name p get multiple open f set close operation j internal frame d o n o t h i n g o n c l o s e f set closable f set maximizable f set resizable f set iconifiable preferences install internal frame prefs handler prefs project f desktop pane point loc = f get location moved { moved = iterator i=projects iterator i has next { project a project = project i next a project != p a project is showing utilities get root pane a project get component get parent get location equals loc { loc x += 22 loc y += 22 moved = } } } moved f set location loc palette handler add f p f add internal frame listener internal frame adapter { @ override internal frame closing internal frame event evt { set current project p get model get action close action action performed action event f action event a c t i o n p e r f o r m e d window closing } } p add property change listener property change listener { property change property change event evt { name = evt get property name name equals has unsaved changes { j internal frame f get root pane get parent put client property window modified p has unsaved changes } name equals { f set title p get == ? unnamed p get get name } } } f add property change listener property change listener { property change property change event evt { name = evt get property name name equals selected { evt get value equals t r u e { set current project p } } } } f set j menu bar create menu bar p f get content pane add p get component f set visible desktop pane add f f to front { f set selected } property veto e { don't care } p get component request focus in window } } hide project p { p is showing { j internal frame f = j internal frame utilities get root pane p get component get parent f set visible f remove p get component desktop pane remove f f dispose } } project get current project { current project } set current project project value { project old value = current project current project = value fire property change current project old value value } is sharing tools among projects { } component get component { parent frame } /** * the wrapped desktop pane */ component wrap desktop pane component c linked list< action> tool bar actions { get model != { id=0 j tool bar tb reversed list< j tool bar> get model create tool bars { id++ j panel panel = j panel border layout panel add tb border layout n o r t h panel add c border layout c e n t e r c = panel preferences install tool bar prefs handler prefs toolbar +id tb tool bar actions add first toggle tool bar action tb tb get name } j tool bar tb = j tool bar tb set name labels get standard tool bar title add standard actions to tb id++ j panel panel = j panel border layout panel add tb border layout n o r t h panel add c border layout c e n t e r c = panel preferences install tool bar prefs handler prefs toolbar +id tb tool bar actions add first toggle tool bar action tb tb get name panel put client property tool bar actions tool bar actions } c } add standard actions to j tool bar tb { j button b application model mo = get model b = tb add mo get action action b set focusable b = tb add mo get action open action b set focusable b = tb add mo get action save action tb add separator b = tb add mo get action undo action b set focusable b = tb add mo get action redo action b set focusable tb add separator b = tb add mo get action cut action b set focusable b = tb add mo get action copy action b set focusable b = tb add mo get action paste action b set focusable } /** * creates a menu bar */ j menu bar create menu bar { resource bundle labels = resource bundle get l a f bundle app labels application model mo = get model j menu bar mb = j menu bar j menu m j menu item mi j menu open recent menu m = j menu labels configure menu m m add mo get action action m add mo get action open action open recent menu = j menu labels configure menu open recent menu open recent open recent menu add mo get action clear recent files action update open recent menu open recent menu m add open recent menu m add separator m add mo get action close action m add mo get action save action m add mo get action save as action mo get action export action != { mi = m add mo get action export action } m add separator m add mo get action exit action mb add m m = j menu labels configure menu m edit m add mo get action undo action m add mo get action redo action m add separator m add mo get action cut action m add mo get action copy action m add mo get action paste action m add mo get action duplicate action m add mo get action delete action m add separator m add mo get action select all action mb add m j menu mm mo create menus { mb add mm } m = j menu j menu window menu = m labels configure menu m window m add mo get action arrange action c a s c a d e m add mo get action arrange action v e r t i c a l m add mo get action arrange action h o r i z o n t a l m add separator project pr projects { pr get action focus action != { window menu add pr get action focus action } } tool bar actions size > 0 { m add separator action a tool bar actions { j check box menu item cbmi = j check box menu item a actions configure j check box menu item cbmi a m add cbmi } } mb add m m = j menu labels configure menu m labels get help m add mo get action about action mb add m add property change listener property change listener { property change property change event evt { name = evt get property name application model mo = get model name == project count { j menu m = window menu m remove all m add mo get action arrange action c a s c a d e m add mo get action arrange action v e r t i c a l m add mo get action arrange action h o r i z o n t a l m add separator iterator i=projects iterator i has next { project pr = project i next pr get action focus action != { m add pr get action focus action } } tool bar actions size > 0 { m add separator action a tool bar actions { j check box menu item cbmi = j check box menu item a actions configure j check box menu item cbmi a m add cbmi } } } name == recent files { update open recent menu open recent menu } } } mb } update open recent menu j menu open recent menu { open recent menu get item count > 0 { j menu item clear recent files item = j menu item open recent menu get item open recent menu get item count 1 open recent menu remove all f recent files { open recent menu add open recent action m d i application f } recent files size > 0 { open recent menu add separator } open recent menu add clear recent files item } }} 