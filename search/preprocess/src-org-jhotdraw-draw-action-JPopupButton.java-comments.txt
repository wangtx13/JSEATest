/* * @ # j popup button 1 1 2006 06 25 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action * beans * * border * event * event * /** * j popup button provides a popup menu * * @author wrandels * @version 1 1 2006 06 25 added more add */public j popup button j button { j popup menu popup menu column count = 1 action action rectangle action area font item font font i t e m f o n t = font dialog font p l a i n 10 /** creates form j tool bar menu */ j popup button { init components set focusable item font = i t e m f o n t } set item font font value { item font = value popup menu != { update font popup menu } } set action action action rectangle action area { action = action action area = action area action add property change listener property change listener { property change property change event evt { evt get property name equals enabled { set enabled evt get value value } { repaint } } } } get column count { column count } set column count count is vertical { column count = count get popup menu set layout vertical grid layout 0 get column count is vertical } add action action { j menu item item = get popup menu add action get column count > 1 { item set u i palette menu item u i } item set font item font } add j menu submenu { j menu item item = get popup menu add submenu update font submenu } update font menu element menu { menu get component set font item font menu element child menu get sub elements { update font child } } add j menu item item { get popup menu add item item set font item font } add separator { get popup menu add separator } set popup menu j popup menu popup menu { popup menu = popup menu } j popup menu get popup menu { popup menu == { popup menu = j popup menu popup menu set layout vertical grid layout 0 get column count } popup menu } /** is called from within the constructor to * initialize the form * w a r n i n g n o t modify the content of is * always regenerated by the form editor */ init components { g e n b e g i n init components form listener form listener = form listener add mouse listener form listener } dispatching events from components to event handlers form listener event mouse listener { mouse clicked event mouse event evt { } mouse entered event mouse event evt { } mouse exited event mouse event evt { } mouse pressed event mouse event evt { evt get source == j popup button { j popup button show popup evt } } mouse released event mouse event evt { evt get source == j popup button { j popup button perform action evt } } } g e n e n d init components perform action event mouse event evt { g e n f i r s t event perform action add your handling here action area != action area contains evt get x get insets left evt get y get insets top { action action performed action event action event a c t i o n p e r f o r m e d evt get when evt get modifiers } } g e n l a s t event perform action show popup event mouse event evt { g e n f i r s t event show popup add your handling here popup menu != action area == || ! action area contains evt get x get insets left evt get y get insets top { x y x = 0 y = get height get parent j tool bar { j tool bar toolbar = j tool bar get parent toolbar get orientation == j tool bar v e r t i c a l { y = 0 toolbar get x > toolbar get parent get insets left { x = popup menu get preferred size width } { x = get width } } { toolbar get y > toolbar get parent get insets top { y = popup menu get preferred size height } } } popup menu show x y } } g e n l a s t event show popup variables declaration not modify g e n b e g i n variables end of variables declaration g e n e n d variables } 