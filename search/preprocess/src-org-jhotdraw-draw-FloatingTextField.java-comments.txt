/* * @ # floating text field 2 0 2006 01 014 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw * * geom * event * /** * a text field overlay that is used to edit a text figure * a floating text field requires a two step initialization * in a first step the overlay is created and in a * second step it can be positioned * * @see draw text figure * * @author werner randelshofer * @version 2 0 2006 01 14 changed to support coordinates * <br>1 0 2003 12 01 derived from 5 4b1 */public floating text field { j text field edit widget drawing view view floating text field { edit widget = j text field 20 } /** * creates the overlay the given component */ create overlay drawing view view { create overlay view } request focus { edit widget request focus } /** * creates the overlay the given container using a * specific font */ create overlay drawing view view text holder figure { view get container add edit widget 0 font f = figure get font f i x m e should scale with fractional value! f = f derive font f get style f get size * view get scale factor edit widget set font f edit widget set foreground figure get text color edit widget set background figure get fill color view = view } insets get insets { edit widget get insets } /** * adds an action listener */ add action listener action listener listener { edit widget add action listener listener } /** * remove an action listener */ remove action listener action listener listener { edit widget remove action listener listener } /** * positions the overlay */ set bounds rectangle r text { edit widget set text text edit widget set bounds r x r y r width r height edit widget set visible edit widget select all edit widget request focus } /** * gets the text contents of the overlay */ get text { edit widget get text } /** * gets the preferred size of the overlay */ dimension get preferred size cols { edit widget set columns cols edit widget get preferred size } /** * removes the overlay */ end overlay { view get container request focus edit widget != { edit widget set visible view get container remove edit widget rectangle bounds = edit widget get bounds view get container repaint bounds x bounds y bounds width bounds height } }} 