/* * @ # grow stroke 1 0 june 9 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package geom * geom * font * /** * grow stroke can be used to grow/shrink a figure by a specified line width * only works with closed convex paths having edges in clockwise direction * <p> * note although is a stroke it does not actually create a stroked * shape but one that can be used filling * * @author werner randelshofer * @version 1 0 june 9 2006 created */public grow stroke stroke { grow grow stroke grow miter limit { grow * 2 1f basic stroke c a p s q u a r e basic stroke j o i n b e v e l miter limit 0f grow = grow } shape create stroked shape shape s { bezier path bp = bezier path general path left = general path general path right = general path coords = 6 f i x m e we only a flattened path path iterator i = s get path iterator 0 1d ! i is done i next { type = i current segment coords type { path iterator s e g m o v e t o bp size != 0 { trace stroke bp left right } bp clear bp move to coords 0 coords 1 path iterator s e g l i n e t o coords 0 != bp get bp size 1 x 0 || coords 1 != bp get bp size 1 y 0 { bp line to coords 0 coords 1 } path iterator s e g q u a d t o bp quad to coords 0 coords 1 coords 2 coords 3 path iterator s e g c u b i c t o bp curve to coords 0 coords 1 coords 2 coords 3 coords 4 coords 5 path iterator s e g c l o s e bp set closed } } bp size > 1 { trace stroke bp left right } left get bounds2 d contains right get bounds2 d { grow > 0 ? left right } { grow > 0 ? right left } } } 