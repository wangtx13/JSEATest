/* * @ # redo action 2 0 2006 06 15 * * copyright c 2005 2006 werner randelshofer * staldenmattweg 2 immensee c h 6405 switzerland * all rights reserved * * software is the confidential and proprietary information of * werner randelshofer confidential information you shall not * disclose such confidential information and shall use it only in * accordance with the terms of the license agreement you entered into * with werner randelshofer */package app action * event * * text * beans * * * app application app project /** * redoes the last user action * in order to work action requires that the project a project * specific undo action when invoking get action redo on the project * * * @author werner randelshofer * @version 2 0 2006 06 15 reworked * <br>1 0 october 9 2005 created */public redo action project action { = redo resource bundle labels = resource bundle get l a f bundle app labels property change listener redo action property listener = property change listener { property change property change event evt { name = evt get property name name == action n a m e { put value action n a m e evt get value } name == enabled { update enabled state } } } /** creates a instance */ redo action application app { app labels configure action } update enabled state { is enabled = action real redo action = get real redo action real redo action != { is enabled = real redo action is enabled } set enabled is enabled } @ override update project project old value project value { update project old value value value != { put value action n a m e value get action redo get value action n a m e update enabled state } } /** * installs listeners on the project */ @ override install project listeners project p { install project listeners p p get action redo add property change listener redo action property listener } /** * installs listeners on the project */ @ override uninstall project listeners project p { uninstall project listeners p p get action redo remove property change listener redo action property listener } action performed action event e { action real redo action = get real redo action real redo action != { real redo action action performed e } } action get real redo action { get current project == ? get current project get action redo } } 