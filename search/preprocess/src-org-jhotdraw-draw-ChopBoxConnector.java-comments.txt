/* * @ # chop box connector 2 1 2006 03 22 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw * * geom * draw attribute keys * geom * /** * a chop box connector locates connection points by * choping the connection between the centers of the * two figures at the display box * <p> * x x x replace all chop connectors by a single chop to center connector and * move chop point2 d into figure * * @see connector * * @author werner randelshofer * @version 2 1 2006 03 22 support total stroke width added * <br>2 0 2006 01 14 changed to support precision coordinates * <br>1 0 2003 12 01 derived from 5 4b1 */public chop box connector connector { /** creates a instance * only used storable */ chop box connector { } chop box connector figure owner { owner } point2 d find start connection figure connection { figure start figure = connection get start connector get owner point2 d from connection get point count <= 2 || connection get liner != { connection get end connector == { from = connection get end point } { rectangle2 d r1 = get connector target connection get end connector get owner get bounds from = point2 d r1 x + r1 width/2 r1 y + r1 height/2 } } { from = connection get point 1 } chop start figure from } point2 d find end connection figure connection { figure end figure = connection get end connector get owner point2 d from connection get point count <= 2 || connection get liner != { connection get start connector == { from = connection get start point } { rectangle2 d r1 = get connector target connection get start connector get owner get bounds from = point2 d r1 x + r1 width/2 r1 y + r1 height/2 } } { from = connection get point connection get point count 2 } chop end figure from } point2 d chop figure target point2 d from { target = get connector target target rectangle2 d r = target get bounds s t r o k e c o l o r get target != { grow s t r o k e p l a c e m e n t get target { c e n t e r grow = attribute keys get stroke total width target / 2d o u t s e grow = attribute keys get stroke total width target i n s e grow = 0d } geom grow r grow grow } geom angle to point r geom point to angle r from }} 