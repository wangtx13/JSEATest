/* * @ # s v g text 1 0 july 8 2006 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package samples svg figures * font * geom * io * draw * geom geom samples svg * xml * draw attribute keys * /** * s v g text * <p> * f i x m e add support transforms * x x x at least on mac o s x always draw text using text layout get outline * because outline layout does not match with text layout draw output * cache outline to improve performance * * @author werner randelshofer * @version 1 0 july 8 2006 created */public s v g text text figure s v g figure { text anchor { s t a r t m d l e e n d } attribute key< text anchor> t e x t a n c h o r = attribute key< text anchor> text anchor text anchor s t a r t /** creates a instance */ s v g text { s v g set defaults } @ override draw stroke graphics2 d g { get text != || is editable { rectangle2 d bounds = get bounds text layout layout = get text layout affine transform tx = affine transform tx translate origin x origin y + layout get ascent shape outline = layout get outline tx g draw outline } } @ override draw fill graphics2 d g { get text != || is editable { text layout layout = get text layout layout draw g origin x origin y + layout get ascent } } @ override draw text graphics2 d g { } @ override write dom output out { out add attribute x origin x out add attribute y origin y out add text get text } write attributes dom output out i o { s v g write attributes out } @ override read dom input in i o { origin x = s v g get dimension in x origin y = s v g get dimension in y set text in get text read attributes in affine transform tx = s v g get transform in transform basic transform tx rectangle2 d r = get bounds t e x t a n c h o r get { s t a r t m d l e origin x = r width / 2d e n d origin x = r width } origin y = f o n t s i z e get } read attributes dom input in i o { s v g read attributes in } color get text color { f i l l c o l o r get } color get fill color { color white } is empty { get text == || get text length == 0 }} 