/* * @ # focus action 2 0 2006 05 05 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app action * beans * * event * * io * app project /** * requests focus a frame * * @author werner randelshofer * @version 2 0 2006 05 05 reworked * <br>1 0 2005 06 10 created */public focus action action { = focus project project /** creates a instance */ focus action project project { project = project resource bundle labels = resource bundle get l a f bundle app labels labels configure action set enabled set enabled project != project add property change listener property change listener { property change property change event evt { resource bundle labels = resource bundle get l a f bundle app labels name = evt get property name name equals { put value action n a m e evt get value == ? labels get unnamed evt get value get name } } } } get value key { key == action n a m e project != { get title } { get value key } } get title { resource bundle labels = resource bundle get l a f bundle app labels title = labels get unnamed project != { = project get == { title = labels get unnamed } { title = get name } project has unsaved changes { title += * } title = labels get formatted internal frame title title project get application get name project get multiple open } title } j frame get frame { j frame utilities get window ancestor project get component } component get root pane container { utilities get root pane project get component get parent } action performed action event evt { /* j frame frame = get frame frame != { frame set extended state frame get extended state ~ frame i c o n i f i e d frame to front frame request focus j root pane rp = utilities get root pane project get component rp != rp get parent j internal frame { j internal frame rp get parent to front } project get component request focus } { toolkit get toolkit beep }*/ component rp container = get root pane container rp container frame { frame frame = frame rp container frame set extended state frame get extended state ~ frame i c o n i f i e d frame to front } rp container j internal frame { j internal frame frame = j internal frame rp container frame to front { frame set selected } property veto e { don't care } } project get component request focus in window }} 