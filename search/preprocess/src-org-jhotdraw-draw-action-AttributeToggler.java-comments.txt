/* * @ # attribute toggler 4 0 2006 06 07 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action * event * * text * event * * draw * /** * attribute toggler toggles an attribute of the selected figures between two * different values * the name of a compatible j text component action is specified the toggler * checks the current permant focus owner is a j text component and it is * it will apply the text action to the j text component * * @author werner randelshofer * @version 4 0 2006 06 07 reworked * <br>3 0 2006 02 27 support compatible text action added * <br>2 0 2006 02 27 toggle attributes regardles from action state * <br>1 0 27 november 2003 created */public attribute toggler action listener { drawing editor editor attribute key key value1 value2 action compatible text action /** creates a instance */ attribute toggler drawing editor editor attribute key key value1 value2 { editor key value1 value2 } attribute toggler drawing editor editor attribute key key value1 value2 action compatible text action { editor = editor key = key value1 = value1 value2 = value2 compatible text action = compatible text action } drawing view get view { editor get view } drawing editor get editor { editor } action performed action event evt { compatible text action != { component focus owner = keyboard focus manager get current keyboard focus manager get permanent focus owner focus owner != focus owner j text component { compatible text action action performed evt } } iterator i = get view get selected figures iterator value = i has next { figure f = figure i next attr = f get attribute key value1 == attr == || value1 != attr != attr equals value1 { value = value2 } { value = value1 } get editor set attribute key value f set attribute key value } i has next { figure f = figure i next f set attribute key value } }} 