/* * @ # actions 2 0 2006 02 13 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app action * * event * * text * beans * * /** * provides constants and operations on <code> action</code> * * @author werner randelshofer * @version 2 0 2006 02 13 merged from draw app actions * <br>1 0 7 februar 2006 created */public actions { /** * key the selected state of an action * the value must be a */ s e l e c t e d k e y = selected /** * all actions with equal value are put into the * same submenu * the value must be a or an of strings * each element of the represents a menu */ s u b m e n u k e y = submenu /** * all actions with equal value are created as * a radio button and put into the same group * the value must be an */ b u t t o n g r o u p k e y = button group /** prevent instance creation */ actions { } /** * configures a j check box menu item an action */ configure j check box menu item j check box menu item mi action a { mi set selected a get value actions s e l e c t e d k e y property change listener property handler = property change listener { property change property change event evt { evt get property name equals actions s e l e c t e d k e y { mi set selected a get value actions s e l e c t e d k e y } } } a add property change listener property handler mi put client property action property handler property handler } /** * unconfigures a j check box menu item an action */ unconfigure j check box menu item j check box menu item mi action a { property change listener property handler = property change listener mi get client property action property handler property handler != { a remove property change listener property handler mi put client property action property handler } }} 