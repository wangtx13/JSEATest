/* * @ # attribute action 2 0 2006 06 07 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw action undo * * text * * * draw * geom * /** * attribute action * * @author werner randelshofer * @version 2 0 2006 06 07 reworked * <br>1 1 2006 02 27 support compatible text action added * <br>1 0 25 november 2003 created */public attribute action selected action { map< attribute key object> attributes /** creates a instance */ /** creates a instance */ attribute action drawing editor editor attribute key key value { editor key value } /** creates a instance */ attribute action drawing editor editor attribute key key value icon icon { editor key value icon } /** creates a instance */ attribute action drawing editor editor attribute key key value name { editor key value name } attribute action drawing editor editor attribute key key value name icon icon { editor key value name icon } attribute action drawing editor editor attribute key key value name icon icon action compatible text action { editor attributes = hash map< attribute key object> attributes put key value put value action n a m e name put value action s m a l l i c o n icon set enabled } attribute action drawing editor editor map< attribute key object> attributes name icon icon { editor attributes = attributes put value action n a m e name put value action s m a l l i c o n icon set enabled } action performed event action event evt { get view != get view get selection count > 0 { composite edit edit = composite edit labels get draw attribute change fire undoable edit happened edit change attributes fire undoable edit happened edit } } change attributes { drawing drawing = get drawing map entry< attribute key object> entry attributes entry set { attribute key key = entry get key value = entry get value iterator i = get view get selected figures iterator i has next { figure figure = figure i next figure set attribute key value } get editor set attribute key value } }} 