/* xml attribute nano xml/ * * $ revision 1 4 $ * $ date 2002/01/04 21 03 29 $ * $ name r e l e a s e 2 2 1 $ * * is part of nano xml 2 * copyright c 2000 2002 marc de scheemaecker all rights reserved * * software is provided 'as is' without any express or implied warranty * in no event will the authors be held liable any damages arising from the * use of software * * permission is granted to anyone to use software any purpose * including commercial applications and to alter it and redistribute it * freely subject to the following restrictions * * 1 the origin of software must not be misrepresented you must not * claim that you wrote the original software you use software in * a product an acknowledgment in the product documentation would be * appreciated but is not required * * 2 altered source versions must be plainly marked as such and must not be * misrepresented as being the original software * * 3 notice may not be removed or altered from any source distribution */package net n3 nanoxml /** * an attribute in an xml element is an internal * * @see net n3 nanoxml xml element * * @author marc de scheemaecker * @version $ name r e l e a s e 2 2 1 $ $ revision 1 4 $ */class xml attribute{ /** * the full name of the attribute */ full name /** * the name of the attribute */ name /** * the namespace u r i of the attribute */ namespace /** * the value of the attribute */ value /** * the type of the attribute */ type /** * creates a attribute * * @param full name the non full name * @param name the non name * @param namespace the namespace u r i which may be * @param value the value of the attribute * @param type the type of the attribute */ xml attribute full name name namespace value type { full name = full name name = name namespace = namespace value = value type = type } /** * the full name of the attribute */ get full name { full name } /** * the name of the attribute */ get name { name } /** * the namespace of the attribute */ get namespace { namespace } /** * the value of the attribute */ get value { value } /** * sets the value of the attribute * * @param value the value */ set value value { value = value } /** * the type of the attribute * * @param type the type */ get type { type }} 