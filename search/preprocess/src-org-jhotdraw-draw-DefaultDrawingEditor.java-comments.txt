/* * @ # drawing editor 3 0 2006 02 13 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * ??? */package draw beans * * datatransfer * event focus event event focus listener beans * * io * draw attribute keys * /** * drawing editor * * @author werner randelshofer * @version 3 0 2006 02 13 revised to handle multiple drawing views * <br>1 0 2003 12 01 derived from 5 4b1 */public drawing editor bean drawing editor tool listener { hash map< attribute key object> attributes = hash map< attribute key object> tool tool hash set< drawing view> views drawing view active view is enabled = drawing view focused view focus listener focus handler = focus listener { focus gained focus event e { set focused view drawing view find view container e get source } focus lost focus event e { ! e is temporary { set focused view } } } /** creates a instance */ drawing editor { set attribute f i l l c o l o r color white set attribute s t r o k e c o l o r color black set attribute t e x t c o l o r color black views = hash set< drawing view> } set tool tool t { t == tool tool != { drawing view v views { v remove mouse listener tool v remove mouse motion listener tool v remove key listener tool } tool deactivate tool remove tool listener } tool = t tool != { tool activate drawing view v views { v add mouse listener tool v add mouse motion listener tool v add key listener tool } tool add tool listener } } area invalidated tool event evt { rectangle r = evt get invalidated area evt get view get container repaint r x r y r width r height } tool started tool event evt { set view evt get view } set view drawing view value { drawing view old value = active view active view = value fire property change view old value value drawing view v views { v get container repaint } } tool done tool event evt { f i x m e maybe we should with all views of the editor?? drawing view v = get view v != { container c = v get container c invalidate c get parent != c get parent validate } } tool get tool { tool } drawing view get view { active view != ? active view views iterator next } update focused view { drawing view v views { v get container has focus { set focused view v } } set focused view } set focused view drawing view value { drawing view old value = focused view focused view = value fire property change focused view old value value } drawing view get focused view { focused view } apply attributes to figure f { map entry< attribute key object> entry attributes entry set { f set attribute entry get key entry get value } } get attribute attribute key key { attributes get key } set attribute attribute key key value { old value = attributes put key value fire property change key get key old value value } remove drawing view view { view get container remove focus listener focus handler views remove view tool != { view remove mouse listener tool view remove mouse motion listener tool view remove key listener tool } view remove notify active view == view { view = views size > 0 ? views iterator next } update focused view } add drawing view view { views add view view add notify view get container add focus listener focus handler tool != { view add mouse listener tool view add mouse motion listener tool view add key listener tool } update focused view } set cursor cursor c { } collection< drawing view> get drawing views { collections unmodifiable collection views } drawing view find view container c { drawing view v views { v get container == c { v } } } set enabled value { value != is enabled { old value = is enabled is enabled = value fire property change enabled old value value } } is enabled { is enabled }} 