/* * @ # drawing editor 2 1 2006 03 15 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw event * * beans * * /** * drawing editor defines the coordinating * the different that participate in a drawing editor * <p> * applications with a single document s d i there is typically * one drawing editor instance per document window so that each window * can have its own toolbars and drawing palettes * <p> * applications with a windows style multiple document m d i there * is typically one drawing editor instance per parent window all document * windows within a parent window share the toolbars and drawing palettes * provided be the parent window * <p> * applications with a mac o s x style application document o s x * there is typically a single drawing editor instance the application all * document windows within the application share a single set of toolbars and * drawing palettes * * @author werner randelshofer * @version 2 1 2006 03 15 support enabled state added * <br>2 0 2006 02 13 revised to support multiple drawing views * <br>1 0 2003 12 01 derived from 5 4b1 */public drawing editor { /** * gets the editor's current drawing * / drawing get drawing /** * sets the editor's current drawing * / set drawing drawing drawing */ /** * adds a drawing view to the editor * the editor add notify on the view and it registers its tool * as an event listener on the view */ add drawing view view /** * removes a drawing view from the editor * the editor remove notify on the view and it unregisters its tool * on the view */ remove drawing view view /** * gets all drawing views associated with editor */ collection< drawing view> get drawing views /** * gets the editor's active drawing view * can be the editor has no views */ drawing view get view /** * sets the editor's active drawing view * can be set to the editor has no views */ set view drawing view value /** * gets the editor's focused view * can be the editor has no views */ drawing view get focused view /** * calls deactivate on the previously active tool of drawing editor * calls activate on the provided tool * forwards all mouse mouse moation and keyboard events that occur on the * drawing view to the provided tool */ set tool tool t /** * gets the current tool */ tool get tool /** * sets the cursor on the view s of the drawing editor */ set cursor cursor c /** * finds a handle at the given coordinates * @return a handle no handle is found * / handle find handle point p */ /** * finds a drawing view * is used by tool to identify the view of which it has received * an event */ drawing view find view container c /** * sets a attribute of the editor * the attribute will be used by creation tools to create a * figure */ set attribute attribute key key value /** * gets a attribute from the editor * the attribute will be used by creation tools to create a * figure */ get attribute attribute key key /** * applies the attributes to the specified figure */ apply attributes to figure f /** * sets the enabled state of the drawing editor * is a bound property */ set enabled value /** * gets the enabled state of the drawing editor */ is enabled add property change listener property change listener listener remove property change listener property change listener listener } 