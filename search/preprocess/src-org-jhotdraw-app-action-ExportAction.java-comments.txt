/* * @ # export action 1 0 2006 04 07 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package app action gui * gui event * * * event * * io * app application app project /** * export action * <p> * action requires that the project has the following additional * <pre> * j chooser get export chooser * * by convention is never invoked on the a w t event dispatcher thread * export f filechooser filter filter component accessory i o * </pre> * * @author werner randelshofer * @version 1 0 2006 04 07 created */public export action project action { = export component old focus owner /** creates a instance */ export action application app { app resource bundle labels = resource bundle get l a f bundle app labels labels configure action } j chooser get export chooser project project { { j chooser project get export chooser } throwable e { internal = internal project does not support exporting init cause e } } action performed action event evt { project project = get current project project is enabled { resource bundle labels = resource bundle get l a f bundle app labels old focus owner = utilities get window ancestor project get component get focus owner project set enabled save to j chooser chooser = get export chooser project j sheet show sheet chooser project get component labels get filechooser export sheet listener { option selected sheet event evt { evt get option == j chooser a p p r o v e o p t i o n { = evt get chooser get selected export to project evt get chooser get filter evt get chooser get accessory } { project set enabled old focus owner != { old focus owner request focus } } } } } } export to project project filechooser filter filter component accessory { project execute worker { construct { { project export { filechooser filter component } filter accessory } internal e { e get cause != ? e get cause e } throwable e { e } } finished value { exported project value } } } exported project project value { value == { /* project set project mark changes as saved multi open = 1 project p project get application documents { p != project p get != p get equals { multi open = math max multi open p get multiple open + 1 } } project set multiple open multi open */ } { out flush throwable value print stack trace f i x m e localize messsage j sheet show message sheet project get component <html> + u i manager get option pane css + <b> couldn't export to the \ +file+ \ <p> + reason +value j option pane e r r o r m e s s a g e } project set enabled utilities get window ancestor project get component to front old focus owner != { old focus owner request focus } }} 