/* * @ # preferences 1 0 october 13 2005 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package prefs * event * prefs * * /** * preferences * * @author werner randelshofer * @version 1 0 october 13 2005 created */public preferences { /** creates a instance */ preferences { } /** * installs a frame preferences handler * on first run sets the window to its preferred size at the top left * corner of the screen * on subsequent runs sets the window the last size and location where * the user had placed it before * * @param prefs preferences storing/retrieving preferences values * @param name base name of the preference * @param window the window which to track preferences */ install frame prefs handler preferences prefs name window window { graphics configuration conf = window get graphics configuration rectangle screen bounds = conf get bounds insets screen insets = window get toolkit get screen insets conf screen bounds x += screen insets left screen bounds y += screen insets top screen bounds width = screen insets left + screen insets right screen bounds height = screen insets top + screen insets bottom dimension preferred size = window get preferred size dimension min size = window get minimum size rectangle bounds = rectangle prefs get name+ x 0 prefs get name+ y 0 math max min size width prefs get name+ width preferred size width math max min size height prefs get name+ height preferred size height ! screen bounds contains bounds { bounds x = screen bounds x + screen bounds width bounds width / 2 bounds y = screen bounds y + screen bounds height bounds height / 2 rectangle intersect screen bounds bounds bounds } window set bounds bounds window add component listener component adapter { component moved component event evt { prefs put name+ x evt get component get x prefs put name+ y evt get component get y } component resized component event evt { prefs put name+ width evt get component get width prefs put name+ height evt get component get height } } } /** * installs a palette preferences handler * on first run sets the palette to its preferred location at the top left * corner of the screen * on subsequent runs sets the palette the last location where * the user had placed it before * * @param prefs preferences storing/retrieving preferences values * @param name base name of the preference * @param window the window which to track preferences */ install palette prefs handler preferences prefs name window window {install palette prefs handler prefs name window 0 } install palette prefs handler preferences prefs name window window x { graphics configuration conf = window get graphics configuration rectangle screen bounds = conf get bounds insets screen insets = window get toolkit get screen insets conf screen bounds x += screen insets left screen bounds y += screen insets top screen bounds width = screen insets left + screen insets right screen bounds height = screen insets top + screen insets bottom dimension preferred size = window get preferred size rectangle bounds = rectangle prefs get name+ x x + screen bounds x prefs get name+ y 0 + screen bounds y preferred size width preferred size height ! screen bounds contains bounds { bounds x = screen bounds x bounds y = screen bounds y } window set bounds bounds window add component listener component adapter { component moved component event evt { prefs put name+ x evt get component get x prefs put name+ y evt get component get y } /* component resized component event evt { prefs put name+ width evt get component get width prefs put name+ height evt get component get height }*/ } } /** * installs an intenal frame preferences handler * on first run sets the frame to its preferred size at the top left * corner of the desktop pane * on subsequent runs sets the frame the last size and location where * the user had placed it before * * @param prefs preferences storing/retrieving preferences values * @param name base name of the preference * @param window the window which to track preferences */ install internal frame prefs handler preferences prefs name j internal frame window j desktop pane desktop { rectangle screen bounds = desktop get bounds screen bounds set location 0 0 insets screen insets = desktop get insets screen bounds x += screen insets left screen bounds y += screen insets top screen bounds width = screen insets left + screen insets right screen bounds height = screen insets top + screen insets bottom dimension preferred size = window get preferred size dimension min size = window get minimum size rectangle bounds = rectangle prefs get name+ x 0 prefs get name+ y 0 math max min size width prefs get name+ width preferred size width math max min size height prefs get name+ height preferred size height ! screen bounds contains bounds { bounds x = screen bounds x + screen bounds width bounds width / 2 bounds y = screen bounds y + screen bounds height bounds height / 2 rectangle intersect screen bounds bounds bounds } window set bounds bounds window add component listener component adapter { component moved component event evt { prefs put name+ x evt get component get x prefs put name+ y evt get component get y } component resized component event evt { prefs put name+ width evt get component get width prefs put name+ height evt get component get height } } } /** * installs a toolbar preferences handler * on first run sets the toolbar to border layout t o p * on subsequent runs set the toolbar to the last border layout location * * @param prefs preferences storing/retrieving preferences values * @param name base name of the preference * @param toolbar the j tool bar which to track preferences */ install tool bar prefs handler preferences prefs name j tool bar toolbar { tool bar prefs handler toolbar name prefs }} 