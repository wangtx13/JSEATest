/* * @ # horizontal layouter 2 1 2006 07 08 * * copyright c 1996 2006 by the original authors of * and all its contributors * all rights reserved * * software is the confidential and proprietary information of * confidential information you shall not disclose * such confidential information and shall use it only in accordance * with the terms of the license agreement you entered into with * */package draw * * geom * * geom * draw attribute keys * /** * a layouter which lays out all children of a composite figure in vertical * direction the preferred size of the figures is used to determine the layout * may cause some figures to resize * <p> * the horizontal layouter honors the l a y o u t i n s e t s attribute key when laying * out a figure * * * @author werner randelshofer * @version 2 0 2006 01 14 changed to support precision coordinates * <br>1 0 1 dezember 2003 created */public horizontal layouter layouter { rectangle2 d calculate layout composite figure composite figure point2 d anchor point2 d { insets2 d layout insets = l a y o u t i n s e t s get composite figure rectangle2 d layout bounds = rectangle2 d anchor x anchor y 0 0 figure child composite figure get children { child is visible { dimension2 d preferred size = child get preferred size insets2 d ins = get insets child layout bounds height = math max layout bounds height preferred size height + ins top + ins bottom layout bounds width += preferred size width + ins left + ins right } } layout bounds width += layout insets left + layout insets right layout bounds height += layout insets top + layout insets bottom layout bounds } rectangle2 d layout composite figure composite figure point2 d anchor point2 d { insets2 d layout insets = l a y o u t i n s e t s get composite figure rectangle2 d layout bounds = calculate layout composite figure anchor x = layout bounds x + layout insets left figure child composite figure get children { child is visible { insets2 d insets = get insets child width = child get preferred size width child basic set bounds point2 d x + insets left layout bounds y + layout insets top + insets top point2 d x + insets left + width layout bounds y + layout bounds height layout insets bottom insets bottom x += width + insets left + insets right } } layout bounds }} 